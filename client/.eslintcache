[{"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\index.js":"1","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\App.js":"2","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\stores\\store.js":"3","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomePage.js":"4","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\CheckoutPage.js":"5","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskDelievry.js":"6","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CartPage\\CartPage.js":"7","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\ResetAccountPage\\ResetAccountPage.js":"8","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\MenuPage.js":"9","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\SignUpPage\\SignUpPage.js":"10","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\SignInPage\\SignInPage.js":"11","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskAccount.js":"12","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskReviewOrder.js":"13","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskPayment.js":"14","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\ResetAccountPage\\ForgotPwdPage.js":"15","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\ResetAccountPage\\ForgotUsernamePage.js":"16","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\SignUpPage\\AuthPage.js":"17","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\reducer\\rootReducer.js":"18","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Navbar\\Navbar.js":"19","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\HomeBody.js":"20","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\RamenMenu\\RamenMenu.js":"21","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Footer\\FooterSection.js":"22","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\SnackMenu\\SnackMenu.js":"23","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\DrinkMenu\\DrinkMenu.js":"24","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\actions\\authAction.js":"25","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\actions\\errorAction.js":"26","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\reducer\\authReducer.js":"27","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\reducer\\errorReducer.js":"28","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\RamenMenu\\Ramens.js":"29","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\actions\\types.js":"30","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\DrinkMenu\\Drinks.js":"31","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\SnackMenu\\Snacks.js":"32","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\LogoutPage\\LogoutPage.js":"33","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\About\\AboutSection.js":"34","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Ramen\\RamenSection.js":"35","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Gallery\\GallerySection.js":"36","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Menu\\MenuSection.js":"37","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Address\\AddressSection.js":"38","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Map\\MapSection.js":"39","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\Pagination\\Paginations.js":"40","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\PopoutFooter\\PopoutFooter.js":"41","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Menu\\MenuCard.js":"42","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Config\\env.js":"43"},{"size":406,"mtime":1629346272244,"results":"44","hashOfConfig":"45"},{"size":1661,"mtime":1629346272188,"results":"46","hashOfConfig":"45"},{"size":487,"mtime":1629346272246,"results":"47","hashOfConfig":"45"},{"size":248,"mtime":1629346272196,"results":"48","hashOfConfig":"45"},{"size":631,"mtime":1629346272190,"results":"49","hashOfConfig":"45"},{"size":144,"mtime":1629346272190,"results":"50","hashOfConfig":"45"},{"size":1445,"mtime":1629346272189,"results":"51","hashOfConfig":"45"},{"size":2398,"mtime":1629346272202,"results":"52","hashOfConfig":"45"},{"size":3897,"mtime":1629346272198,"results":"53","hashOfConfig":"45"},{"size":10865,"mtime":1629346272203,"results":"54","hashOfConfig":"45"},{"size":6988,"mtime":1629346272202,"results":"55","hashOfConfig":"45"},{"size":5122,"mtime":1629346272189,"results":"56","hashOfConfig":"45"},{"size":0,"mtime":1629346272190,"results":"57","hashOfConfig":"45"},{"size":0,"mtime":1629346272190,"results":"58","hashOfConfig":"45"},{"size":2401,"mtime":1629346272201,"results":"59","hashOfConfig":"45"},{"size":2287,"mtime":1629346272201,"results":"60","hashOfConfig":"45"},{"size":8135,"mtime":1629346272202,"results":"61","hashOfConfig":"45"},{"size":256,"mtime":1629346272245,"results":"62","hashOfConfig":"45"},{"size":3905,"mtime":1629346272201,"results":"63","hashOfConfig":"45"},{"size":703,"mtime":1629346272194,"results":"64","hashOfConfig":"45"},{"size":7004,"mtime":1629346272199,"results":"65","hashOfConfig":"45"},{"size":379,"mtime":1629346272193,"results":"66","hashOfConfig":"45"},{"size":2888,"mtime":1629346272200,"results":"67","hashOfConfig":"45"},{"size":4175,"mtime":1629346272197,"results":"68","hashOfConfig":"45"},{"size":3516,"mtime":1629346272244,"results":"69","hashOfConfig":"45"},{"size":304,"mtime":1629346272244,"results":"70","hashOfConfig":"45"},{"size":2024,"mtime":1629346272245,"results":"71","hashOfConfig":"45"},{"size":487,"mtime":1629346272245,"results":"72","hashOfConfig":"45"},{"size":5813,"mtime":1629346272199,"results":"73","hashOfConfig":"45"},{"size":660,"mtime":1629346272245,"results":"74","hashOfConfig":"45"},{"size":5222,"mtime":1629346272197,"results":"75","hashOfConfig":"45"},{"size":4116,"mtime":1629346272200,"results":"76","hashOfConfig":"45"},{"size":646,"mtime":1629346272197,"results":"77","hashOfConfig":"45"},{"size":4805,"mtime":1629346272191,"results":"78","hashOfConfig":"45"},{"size":293,"mtime":1629346272196,"results":"79","hashOfConfig":"45"},{"size":2660,"mtime":1629346272194,"results":"80","hashOfConfig":"45"},{"size":4053,"mtime":1629346272196,"results":"81","hashOfConfig":"45"},{"size":1526,"mtime":1629346272192,"results":"82","hashOfConfig":"45"},{"size":787,"mtime":1629346272195,"results":"83","hashOfConfig":"45"},{"size":1269,"mtime":1629346272198,"results":"84","hashOfConfig":"45"},{"size":3752,"mtime":1629346272199,"results":"85","hashOfConfig":"45"},{"size":3788,"mtime":1629346272195,"results":"86","hashOfConfig":"45"},{"size":74,"mtime":1629346272192,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1jrz2pe",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"90"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"90"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"90"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\index.js",[],["202","203"],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\App.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\stores\\store.js",["204"],"import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducer/rootReducer'; \r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst initState ={};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initState, composeWithDevTools(\r\n  applyMiddleware(...middleware),\r\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  \r\n));\r\n\r\nexport default store;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomePage.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\CheckoutPage.js",["205","206","207"],"import React from 'react';\r\nimport NavBar from '../Navbar/Navbar';\r\nimport AskAccount from './AskAccount';\r\nimport AskDelievry from './AskDelievry';\r\nimport AskPayment from './AskPayment';\r\nimport AskReviewOrder from './AskReviewOrder';\r\nconst CheckoutPage = () => {\r\n    // will use redux to manage the state such as isAskAccount?\r\n    // then you can access AskDelivery Page and so on....\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <AskAccount/>\r\n            {/* <AskDelievry/>\r\n            <AskPayment/>\r\n            <AskReviewOrder/> */}\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default CheckoutPage;\r\n\r\n\r\n","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskDelievry.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CartPage\\CartPage.js",["208"],"import React from 'react';\r\nimport {Grid,Typography,Box,Divider,makeStyles } from '@material-ui/core';\r\nimport NavBar from '../Navbar/Navbar';\r\nconst useStyle = makeStyles(()=>({\r\n    root:{\r\n      marginTop:'40px',\r\n      marginLeft:'100px'\r\n    }\r\n}))\r\n//gonna use cards, data will be pull out from database, will use redux for state management.\r\n\r\nconst CartPage = () => {\r\n    const classes = useStyle();\r\n    return ( \r\n        <div>\r\n            <NavBar/>\r\n            <Grid container className={classes.root}>\r\n                <Grid item lg={8}>\r\n                    <Typography variant='h4'>\r\n                        <Box fontWeight='bold'>\r\n                            My Orders\r\n                        </Box>\r\n                    </Typography>\r\n                    <Typography>\r\n                        <Box>\r\n                           Ramen\r\n                        </Box>\r\n                    </Typography>\r\n                    <Typography>\r\n                        <Box>\r\n                            Snack\r\n                        </Box>\r\n                    </Typography>\r\n                    <Typography>\r\n                        <Box>\r\n                            Drinks\r\n                        </Box>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item lg={4}>\r\n                    cart\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CartPage;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\ResetAccountPage\\ResetAccountPage.js",["209","210","211","212"],"import React,{useState} from 'react';\r\nimport {Button,Grid,makeStyles,Box,ButtonGroup} from '@material-ui/core';\r\nimport ForgotPwdPage from './ForgotPwdPage';\r\nimport ForgotEmailPage from './ForgotUsernamePage';\r\nimport NavBar from '../Navbar/Navbar';\r\nimport Footer from '../HomePage/HomeBody/Footer/FooterSection';\r\nconst useStyles = makeStyles(()=>({\r\n  root:{\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    padding: '4rem ',\r\n    width:'50%',\r\n    margin:'0 auto'\r\n  },\r\n\r\n  passwordBtn:{\r\n    textTransform:'none',\r\n    backgroundColor:'#000000',\r\n    color:'#ffffff',\r\n    '&:hover':{\r\n      backgroundColor:'#000000',\r\n      color:'#ffffff',\r\n    }\r\n  },\r\n  usernameBtn:{\r\n    textTransform:'none',\r\n    backgroundColor:'#000000',\r\n    color:'#ffffff',\r\n      '&:hover':{\r\n      backgroundColor:'#000000',\r\n      color:'#ffffff',\r\n    }\r\n  },\r\n  clearButton:{\r\n    textTransform:'none',\r\n    '&:hover':{\r\n      backgroundColor:'#000000',\r\n      color:'#ffffff',\r\n    }\r\n  }\r\n}))\r\n\r\nconst ResetAccountPage = () => {\r\n  const classes = useStyles();\r\n  const [isPwdBtnCheck,setIsPwdBtnCheck] = useState(false);\r\n  const [isUsernameBtnCheck,setIsUsernameBtnCheck] = useState(true);\r\n\r\n\r\n  const handleClick = (e) => {\r\n    //get material ui button value\r\n    // console.log(e.currentTarget.value);\r\n    if(e.currentTarget.value == 'email'){\r\n      setIsUsernameBtnCheck(true);\r\n      setIsPwdBtnCheck(false);\r\n    }\r\n    else if(e.currentTarget.value == 'password'){\r\n      setIsPwdBtnCheck(true);\r\n      setIsUsernameBtnCheck(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n      <Box className={classes.root}>\r\n        <ButtonGroup fullWidth>\r\n            <Button \r\n            onClick={handleClick}\r\n            className={ isUsernameBtnCheck?classes.usernameBtn:classes.clearButton}\r\n            value='email'\r\n            >\r\n                Forgot Username\r\n             </Button>\r\n           <Button \r\n           onClick={handleClick}\r\n           className={isPwdBtnCheck?classes.passwordBtn:classes.clearButton}\r\n           value='password'\r\n           >\r\n                Forgot Password\r\n           </Button>\r\n         </ButtonGroup>\r\n\r\n              {isUsernameBtnCheck?\r\n              <ForgotEmailPage/>:\r\n              <ForgotPwdPage/>}\r\n\r\n      </Box>\r\n      {/* <Footer/> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetAccountPage;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\MenuPage.js",["213"],"import React,{useState} from 'react';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport {Grid,Typography,makeStyles, Box,Button,Paper } from '@material-ui/core';\r\nimport RamenMenu from './RamenMenu/RamenMenu';\r\nimport SnackMenu from './SnackMenu/SnackMenu';\r\nimport DrinkMenu from './DrinkMenu/DrinkMenu';\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    title:{\r\n      textAlign:'center'\r\n    },\r\n    titleBg:{\r\n        backgroundColor: '#ffda08',\r\n        height:'200px',\r\n        width:'100%',\r\n    },\r\n    subtitleBg:{\r\n        backgroundColor:'#f8f8f8',\r\n        height:'60px',\r\n        width:'100%',\r\n        // position: '-webkit-sticky',\r\n        position: 'sticky',\r\n        top: '80px',\r\n        zIndex:800,\r\n    },\r\n    subtitle:{\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n        \"&:hover\": {\r\n            backgroundColor:'#000000',\r\n            color:'#ffffff'\r\n        }\r\n    },\r\n    subtitleHover:{\r\n        \"&:hover\": {\r\n            backgroundColor:'#000000',\r\n            color:'#ffffff'\r\n        }\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\nconst MenuPage = () => {\r\n    const classes = useStyles();\r\n    const [ramenClick,setRamenClick] = useState(true);\r\n    const [snackClick,setSnackClick] = useState(false);\r\n    const [drinkClick,setDrinkClick] = useState(false);\r\n\r\n    const RamenOnclick = () =>{\r\n        setRamenClick(true);\r\n        setSnackClick(false);\r\n        setDrinkClick(false);\r\n    }\r\n\r\n    const snackOnclick = () =>{\r\n        setRamenClick(false);\r\n        setSnackClick(true);\r\n        setDrinkClick(false);\r\n    }\r\n\r\n    const drinkOnclick = () =>{\r\n        setRamenClick(false);\r\n        setSnackClick(false);\r\n        setDrinkClick(true);\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Navbar/>\r\n        <Grid container \r\n         justify=\"center\"\r\n         alignItems=\"center\"\r\n         className={classes.titleBg}\r\n         >\r\n            <Grid item >\r\n                <Typography variant='h2' className={classes.title}>\r\n                   <Box letterSpacing={3} fontWeight='bold'>\r\n                       Menu\r\n                   </Box>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid \r\n        container\r\n        className={classes.subtitleBg}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        align=\"center\"\r\n        >\r\n            <Grid item lg={1}>\r\n                <Button \r\n                onClick= {()=> RamenOnclick()}\r\n                className={ramenClick?classes.subtitle:classes.subtitleHover}\r\n                >\r\n                  <Typography variant='inherit'>\r\n                      <Box letterSpacing={3} fontWeight='bold'>\r\n                          Ramen\r\n                      </Box>\r\n                  </Typography>\r\n                </Button>\r\n            </Grid>\r\n            <Grid item lg={1}>\r\n                <Button \r\n                onClick= {()=> snackOnclick()}\r\n                className={snackClick?classes.subtitle:classes.subtitleHover}>\r\n                  <Typography variant='inherit'>\r\n                      <Box letterSpacing={3} fontWeight='bold'>\r\n                          Snack\r\n                      </Box>\r\n                  </Typography>\r\n                </Button>\r\n            </Grid>\r\n            <Grid item lg={1}>\r\n                <Button\r\n                 onClick= {()=> drinkOnclick()}\r\n                 className={drinkClick?classes.subtitle:classes.subtitleHover}\r\n                 >\r\n                  <Typography variant='inherit'>\r\n                      <Box letterSpacing={3} fontWeight='bold'>\r\n                          Drink\r\n                      </Box>\r\n                  </Typography>\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n        {\r\n        ramenClick?<RamenMenu/>:\r\n        snackClick?<SnackMenu/>:\r\n        drinkClick?<DrinkMenu/>:null\r\n        }\r\n\r\n        \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default MenuPage;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\SignUpPage\\SignUpPage.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240"],"import React,{useEffect, useState,useRef,} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport NavBar from '../Navbar/Navbar';\r\nimport {Button,makeStyles,Grid,Box,Paper, Typography,\r\n  FormControl,InputLabel,Input,FormControlLabel,\r\n  TextField,IconButton,Divider}\r\n   from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {register,resend,confirm} from '../../redux/actions/authAction';\r\nimport {clearErrors} from '../../redux/actions/errorAction';\r\nimport moment from 'moment';\r\nimport Counter from 'react-number-counter'\r\nimport AuthPage from './AuthPage';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root:{\r\n      backgroundColor:'#565A6D',\r\n      background:'#565A6D',\r\n      height:'100vh',\r\n      display: \"flex\",\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      \r\n  },\r\n  paper:{\r\n    // margin: theme.spacing(1),\r\n    //   width: theme.spacing(16),\r\n    //   height: theme.spacing(16),\r\n    width: '35rem',\r\n  height: '42rem',\r\n  },\r\n  signUpContainer:{\r\n  \r\n    margin:'0 auto',\r\n    width: '80%',\r\n    paddingTop:'1rem',\r\n\r\n  },\r\n  joinButton:{\r\n      backgroundColor:'#1A1818',\r\n      background:'#1A1818',\r\n      color:'#ffff',\r\n      width:'100%',\r\n      marginTop:'1rem',\r\n      textTransform:'none',\r\n      '&:hover':{\r\n        backgroundColor:'#1A1818',\r\n        background:'#1A1818',\r\n        color:'#ffff',\r\n        textTransform:'none',\r\n      }\r\n      \r\n  },\r\n  codeTextField:{\r\n    width:'70%'\r\n  },\r\n  resendBtn:{\r\n    backgroundColor:'#000000',\r\n    color:'#ffffff',\r\n    textTransform:'none',\r\n    height:'3.5rem',\r\n    width:'30%',\r\n    '&:hover':{\r\n      backgroundColor:'#000000',\r\n      color:'#ffffff',\r\n    } \r\n  },\r\n  disableResendBtn:{\r\n    backgroundColor:'#cccccc',\r\n    color: '#666666',\r\n    textTransform:'none',\r\n    height:'3.5rem',\r\n    width:'30%',\r\n    '&:hover':{\r\n      backgroundColor:'#cccccc',\r\n      color: '#666666',\r\n    } \r\n  },\r\n  divider:{\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    '&::before':{\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderBottom: '1px solid #000',\r\n      margin: 'auto',\r\n      marginRight: '10px',\r\n    },\r\n    '&::after':{\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderBottom: '1px solid #000',\r\n      margin: 'auto',\r\n      marginLeft: '10px',\r\n    },\r\n  },\r\n    link:{\r\n      textDecoration:'none',\r\n    }\r\n\r\n}))\r\n\r\n\r\n\r\nconst SignUpPage = (props) => {\r\n  const classes = useStyles();\r\n  const [email,setEmail] = useState('');\r\n  const [username,setUsername] = useState('');\r\n  const [password,setPassword] = useState('');\r\n  const [passwordCheck,setPasswordCheck] = useState('');\r\n  const [errMsg,setErrMsg] = useState(null);\r\n  const [secretCode,setSecretCode] = useState(null);\r\n  const [isResendClick,setIsResendClick] = useState(false);\r\n  const [isComplete,setIsComplete] = useState(false);\r\n  const [disableBtn,setDisableBtn] = useState(false);\r\n  const [counter, setCounter] =useState(300);\r\n  const [secToMinute,setSecToMinute] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // notify.show(\"Email sent, check your inbox to confirm\",\"success\");\r\n   //follow is how you use componentDidUpdate(prevProps) in functional component, this didUpdate \r\n   //lifeCycle function will compare to see if the error have been changed and updated the change.\r\n  \r\n   const prevProps = usePrevious(props.error);\r\n\r\n   function usePrevious(value) {\r\n     const ref = useRef();\r\n   useEffect(() => {\r\n \r\n     ref.current = value;\r\n     const { error,isAuthenticated,isInCooldown} = props;\r\n     if(error !== prevProps){\r\n       //check for register error\r\n       if(error.id === 'REGISTER_FAIL' || error.id === 'CONFIRMATION_FAIL'){\r\n        setErrMsg(error.msg.msg);\r\n       }\r\n       else{\r\n        setErrMsg(null);\r\n       }\r\n     }\r\n       //redirect when login successfully.\r\n    //  if(isAuthenticated){\r\n    //    props.clearErrors();\r\n    //   // history.push(\"/\", { from: \"signUp\" });\\\r\n      \r\n    //   //  setTimeout(()=>history.push(\"/\", { from: \"signUp\" }), 5000);\r\n    // }\r\n    // if(props.isAuthenticated){\r\n    //     props.clearErrors();\r\n    //  }\r\n\r\n    \r\n });\r\n     return ref.current;\r\n   }\r\n \r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.name=='email') setEmail(e.target.value);\r\n    else if(e.target.name=='username') setUsername(e.target.value);\r\n    else if(e.target.name=='password') setPassword(e.target.value);\r\n    else if(e.target.name=='repassword') setPasswordCheck(e.target.value);\r\n    else if(e.target.name=='secretCode') setSecretCode(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n     \r\n    e.preventDefault();\r\n\r\n      //generate SecretCode\r\n   let secretCode = Math.floor(100000 + Math.random() * 900000);\r\n\r\n    \r\n    const newUser = {email,password,passwordCheck,username,secretCode}\r\n    // const newCode = {email,}\r\n    props.register(newUser);\r\n    // props.resend()\r\n    \r\n    // if(props.isConfirmed) \r\n    //    history.push(\"/NotifyEmailConfirm\", { from: \"signUp\" });\r\n \r\n  }\r\n\r\n\r\n\r\n  const history = useHistory();\r\n  const {isAuthenticated,isConfirmed,error} = props;\r\n  return (\r\n    <div >\r\n     \r\n      <NavBar/>\r\n      <Box className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        \r\n       {/* the user is still filling out the signUp form, the isAuthenticated will become true once they succeccfully filled out. */}\r\n        {!isAuthenticated?\r\n          <Grid container \r\n          className={classes.signUpContainer}\r\n          direction='column'\r\n          >\r\n             <Grid item >\r\n                <Typography variant='h4'>\r\n                   <Box letterSpacing={2}>\r\n                      Sign up for account\r\n                   </Box>\r\n                </Typography>\r\n             </Grid>\r\n             <Grid item>\r\n                 <Typography variant='inherit'>\r\n                     <Box letterSpacing={2} mt={1}>\r\n                        nnn-ramen, All about delicious\r\n                     </Box>\r\n                  </Typography>\r\n              </Grid>\r\n            <Grid item>\r\n                <FormControl \r\n                 variant=\"outlined\"  \r\n                  margin='dense' \r\n                  fullWidth\r\n                  >\r\n                <Box mt={2}>\r\n                  <TextField\r\n                        id=\"outlined-password-input\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"current-email\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                     \r\n                    />\r\n                </Box>\r\n\r\n  \r\n                <Box mt={2}>\r\n                  <TextField\r\n                        id=\"outlined-username-input\"\r\n                        label=\"Username\"\r\n                        type=\"username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"current-username\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n\r\n                    />\r\n                </Box>\r\n\r\n                <Box mt={2}>\r\n                <TextField\r\n                      id=\"outlined-password-input\"\r\n                      label=\"8-20 Characters\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                  />\r\n                  </Box>\r\n\r\n                <Box mt={2}>\r\n                <TextField\r\n                      id=\"outlined-password-input\"\r\n                      label=\"Enter the password again\"\r\n                      type=\"password\"\r\n                      name=\"repassword\"\r\n                      autoComplete=\"current-password\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                  />\r\n               </Box>\r\n                <Button className={classes.joinButton}\r\n                 onClick={handleSubmit}\r\n                 >\r\n                  <Typography variant='h6'>\r\n                    Join now\r\n                  </Typography>\r\n                </Button>\r\n\r\n                {errMsg?\r\n                <Box mt={1}>\r\n                  <Alert variant=\"outlined\" severity=\"error\">\r\n                      {errMsg}\r\n                 </Alert>\r\n               </Box>:null\r\n           \r\n               }\r\n\r\n\r\n            \r\n                </FormControl>\r\n\r\n             \r\n\r\n                 <h2 className={classes.divider}>\r\n                  or\r\n                 </h2>\r\n                 <Grid container\r\n                  direction='row'\r\n                  align='center'\r\n                  justify='center'\r\n                  alignItems='center'\r\n                  >\r\n                     <Grid item >\r\n                       <Link to=\"/auth/facebook\">\r\n                         <IconButton>\r\n                           <FacebookIcon/>\r\n                         </IconButton>\r\n                       </Link>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <IconButton>\r\n                        <TwitterIcon/>\r\n                      </IconButton>\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <IconButton>\r\n                         <InstagramIcon/>\r\n                      </IconButton>\r\n                      </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography align='center' >\r\n                    Already have a account?  \r\n                    <Link to='signIn' className={classes.link}> Sign in </Link> here\r\n                  </Typography>\r\n                </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          //  the user hits join now button with no error, now user will have to input the secret code.  \r\n              :\r\n              \r\n\r\n\r\n               <AuthPage email={email}/>\r\n             \r\n              \r\n            \r\n              } \r\n      </Paper>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUpPage.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n  register:PropTypes.func.isRequired,\r\n  clearErrors:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state  =>({\r\n  isAuthenticated : state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,{register,clearErrors,resend,confirm})(SignUpPage); //,login","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\SignInPage\\SignInPage.js",["241","242","243","244","245","246"],"import React,{useState,useRef,useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../redux/actions/authAction';\r\nimport {Grid,Box,makeStyles,Typography,TextField,FormControl,Button,IconButton,ButtonGroup} from '@material-ui/core';\r\nimport { color, borderRadius } from '@material-ui/system';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport NavBar from '../Navbar/Navbar';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport {clearErrors} from '../../redux/actions/errorAction';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(()=>({\r\n  root:{\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    // justifyContent:'space-evenly',\r\n    alignItems:'center',\r\n    // height:'50vh',\r\n    // backgroundColor:'blue',\r\n    paddingTop:'2rem',\r\n    \r\n  },\r\n  inputField:{\r\n    // display:'flex',\r\n    width:'25%',\r\n    margin:'5px auto',\r\n  \r\n  },\r\n  button:{\r\n    textTransform:'none',\r\n    backgroundColor:'#000000',\r\n    color:'#ffffff',\r\n    width:'100%',\r\n    margin:'30px auto',\r\n    '&:hover':{\r\n      textTransform:'none',\r\n      backgroundColor:'#000000',\r\n      color:'#ffffff',\r\n    }\r\n  },\r\n  link:{\r\n    textDecoration:'none',\r\n  },\r\n  dividerContainer:{\r\n    width:'25%',\r\n    margin:'5px auto',\r\n  },\r\n  divider:{\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    '&::before':{\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderBottom: '1px solid #000',\r\n      margin: 'auto',\r\n      marginRight: '10px',\r\n    },\r\n    '&::after':{\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderBottom: '1px solid #000',\r\n      margin: 'auto',\r\n      marginLeft: '10px',\r\n    },\r\n  },\r\n  iconbuttons:{\r\n    padding:'5px',\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    color:'#000000',\r\n    borderRadius:5,\r\n    '&:hover':{\r\n      backgroundColor:'#000000',\r\n      color:'#ffffff'\r\n    }\r\n\r\n  },\r\n  iconbuttonContainer:{\r\n    display:'flex',\r\n    alignContent:'flex-start',\r\n    justifyContent:'center',\r\n  },\r\n \r\n}))\r\n\r\n\r\nfunction SignInPage(props) {\r\n  const classes = useStyles();\r\n const [username,setUsername] = useState('');\r\n const [password,setPassword] = useState('');\r\n const [errMsg,setErrMsg] = useState(null);\r\n const history = useHistory();\r\n const prevProps = usePrevious(props.error);\r\n\r\n function usePrevious(value) {\r\n   const ref = useRef();\r\n useEffect(() => {\r\n\r\n   ref.current = value;\r\n   const { error,isAuthenticated} = props;\r\n   if(error !== prevProps){\r\n     //check for register error\r\n     if(error.id === 'REGISTER_FAIL'){\r\n      setErrMsg(error.msg.msg);\r\n     }\r\n     else{\r\n      setErrMsg(null);\r\n     }\r\n   }\r\n     //redirect when login successfully.\r\n   if(isAuthenticated){\r\n     props.clearErrors();\r\n    history.push(\"/\", { from: \"signIn\" });\r\n\r\n   }\r\n});\r\n   return ref.current;\r\n }\r\n\r\n const handleChange = (e) =>{\r\n    if(e.target.name == 'username') setUsername(e.target.value);\r\n    else if(e.target.name =='password') setPassword(e.target.value);\r\n  }\r\n\r\n\r\n const handleSubmit = (e) =>{\r\n  e.preventDefault();\r\n\r\n  const user = {username,password}\r\n\r\n  // attempt to login\r\n  props.login(user);\r\n }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n      <Box className={classes.root}>\r\n        <Box > \r\n            <Typography variant='h4'>\r\n              <Box>\r\n                Welcome Back\r\n              </Box>\r\n            </Typography>\r\n        </Box>\r\n        <Box>\r\n             <Typography variant='subtitle1'>\r\n                <Box mb={3}>\r\n                  nnn-ramen, all about delicious\r\n                </Box>\r\n              </Typography>\r\n        </Box>\r\n        <FormControl fullWidth>\r\n          <Box className={classes.inputField} >\r\n              <TextField\r\n                id=\"outlined-username-input\"\r\n                label=\"Username\"\r\n                type=\"username\"\r\n                name=\"username\"\r\n                autoComplete=\"current-username\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n              />\r\n        </Box>\r\n        <Box className={classes.inputField}>\r\n         {/* <FormControl fullWidth> */}\r\n            <TextField\r\n              id=\"outlined-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              autoComplete=\"current-password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n            />\r\n           {/* </FormControl> */}\r\n           {errMsg?\r\n                <Box mt={1}>\r\n                  <Alert variant=\"outlined\" severity=\"error\">\r\n                      {errMsg}\r\n                 </Alert>\r\n               </Box>:null\r\n           \r\n               }\r\n\r\n           <Button className={classes.button} onClick={handleSubmit}>\r\n              Sign in\r\n           </Button>\r\n        </Box>\r\n        </FormControl>\r\n\r\n        <Box iconbuttonContainer> \r\n         <IconButton className={classes.iconbuttons}>  \r\n           <FacebookIcon/>\r\n              <Box ml={0.5}>\r\n                 <Typography variant='subtitle1'>\r\n                    Sign in with Facebook\r\n                  </Typography>\r\n              </Box>\r\n           </IconButton>\r\n           <IconButton className={classes.iconbuttons}>\r\n              <InstagramIcon/>\r\n              <Box ml={0.5}>\r\n                <Typography variant='subtitle1'>\r\n                   Sign in with Instagram\r\n                 </Typography>\r\n               </Box>\r\n           </IconButton>\r\n           <IconButton className={classes.iconbuttons}>\r\n              <TwitterIcon/>\r\n              <Box ml={0.5}>\r\n                <Typography variant='subtitle1'>\r\n                   Sign in with Twitter\r\n                 </Typography>\r\n               </Box>\r\n           </IconButton>\r\n           </Box>\r\n        <Box mt={3}>\r\n        <Typography>\r\n             <Link to='resetAccount' className={classes.link}> \r\n             Forgot username or password?\r\n             </Link>\r\n           </Typography>\r\n        </Box>\r\n        <Box className={classes.dividerContainer}>\r\n          <h2 className={classes.divider}>or</h2>\r\n        </Box>\r\n        <Box >\r\n           <Typography>\r\n                New customer?  \r\n               <Link to='signUp' className={classes.link}> \r\n                 Join now\r\n               </Link>\r\n             </Typography>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nSignInPage.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n  login:PropTypes.func.isRequired,\r\n  clearErrors:PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state  =>({\r\n  isAuthenticated : state.auth.isAuthenticated,\r\n  error: state.error\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,{login,clearErrors})(SignInPage); //,login","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskAccount.js",["247","248"],"import React from 'react';\r\nimport {Box, Grid,makeStyles, Typography,\r\n    Button,Divider,TextField,FormControl,\r\n    InputLabel,FormHelperText,Input,FormControlLabel,\r\n    Checkbox,\r\n } from '@material-ui/core';\r\n import {Link} from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles(()=>({\r\n    root:{\r\n      marginTop:'10rem',\r\n    },\r\n    guestButton:{\r\n\r\n        paddingLeft:'50px',\r\n        paddingRight:'50px',\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n        marginTop:'25px',\r\n        textTransform:'none',\r\n        borderRadius:7,\r\n        '&:hover':{\r\n            paddingLeft:'50px',\r\n            paddingRight:'50px',\r\n            backgroundColor:'#000000',\r\n            color:'#ffffff',\r\n            textTransform:'none',\r\n            borderRadius:7,\r\n        }\r\n    },\r\n    customerButton:{\r\n        paddingLeft:'45px',\r\n        paddingRight:'45px',\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n        marginTop:'25px',\r\n        textTransform:'none',\r\n        borderRadius:7,\r\n        '&:hover':{\r\n            paddingLeft:'45px',\r\n            paddingRight:'45px',\r\n            backgroundColor:'#000000',\r\n            color:'#ffffff',\r\n            marginTop:'25px',\r\n            textTransform:'none',\r\n            borderRadius:7,\r\n        }\r\n    },\r\n    midDivider:{\r\n        padding:'0.4px',\r\n        backgroundColor:'#000000'\r\n    },\r\n    // guestDivider:{\r\n    //     backgroundColor:'#000000',\r\n        \r\n    // }\r\n    link:{\r\n        textDecoration:'none',\r\n    }\r\n}))\r\n\r\n\r\nconst AskAccount = () => {\r\n    const classes = useStyle();\r\n    return ( \r\n        <div className={classes.root}>\r\n            <Grid container justify='center' >\r\n                <Grid item lg={3}>\r\n                    <Typography variant='h4'>\r\n                        <Box>\r\n                            Returning Customers\r\n                        </Box>\r\n                    </Typography>\r\n                  <FormControl filled fullWidth margin='dense'>\r\n                    <InputLabel htmlFor=\"my-input\">Username </InputLabel>\r\n                    <Input id=\"my-input\" aria-describedby=\"my-helper-text\"   />\r\n                    {/* <FormHelperText id=\"my-helper-text\">\r\n                        We'll never share your email.\r\n                    </FormHelperText> */}\r\n                 </FormControl>\r\n                \r\n                <FormControl filled fullWidth margin='dense'>\r\n                  <InputLabel htmlFor=\"my-input\">Password</InputLabel>\r\n                  <Input id=\"my-input\" aria-describedby=\"my-helper-text\"   />\r\n                </FormControl>\r\n\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                    //   checked={state.checkedF}\r\n                    //   onChange={handleChange}\r\n                    //   name=\"checkedF\"\r\n                     color=\"#000000\"\r\n                    />\r\n                  }\r\n                  label=\"Keep me logged in\"\r\n                />\r\n                <Box>\r\n                  <Button className={classes.customerButton}>\r\n                    <Typography>\r\n                        <Box fontSize={15}>\r\n                            Log in\r\n                        </Box>\r\n                    </Typography>\r\n                  </Button>\r\n                </Box>\r\n\r\n               <Box mt={3}>\r\n                <Link \r\n                to='resetAccount'\r\n                className={classes.link}>\r\n                Forgot your username/password?\r\n                </Link>\r\n                </Box>\r\n\r\n                </Grid>\r\n                <Grid  lg={1}/>\r\n                <Grid item lg={1}>\r\n                 <Divider orientation='vertical'  className={classes.midDivider}/>\r\n                </Grid>\r\n                <Grid item lg={3}   >\r\n                       <Typography variant='h4'>\r\n                            <Box>\r\n                                Guest\r\n                            </Box>\r\n                       </Typography>\r\n                       <Typography variant='subtitle1'>\r\n                            <Box mt={2}>\r\n                                Checkout without logging in. You can always create an account later.\r\n                            </Box>\r\n                       </Typography>\r\n                       <Link to='deliveryPage'\r\n                       className={classes.link}>\r\n                         <Button className={classes.guestButton}>\r\n                           <Typography variant='h6'>\r\n                                <Box fontSize={20}>\r\n                                   Continue\r\n                                </Box>\r\n                           </Typography>\r\n                         </Button>\r\n                       </Link>\r\n                       <Box mt={6}>\r\n                           <Divider/>\r\n                       </Box>\r\n                       <Box mt={3}>\r\n                           Do you want to <Link to ='signUp' className={classes.link}>create an account</Link> now?\r\n                       </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AskAccount;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskReviewOrder.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\CheckoutPage\\AskPayment.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\ResetAccountPage\\ForgotPwdPage.js",["249","250"],"import React,{useState} from 'react';\r\nimport { Typography, makeStyles, FormControl, TextField,Button,Grid,Box} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles(()=>({\r\n  root:{\r\n    paddingTop:'20px',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    width:'100%',\r\n  },\r\n  title:{\r\n    color:'#066EAA',\r\n  },\r\n  subtitle:{\r\n    color:'#696969'\r\n  },\r\n  formContainer:{\r\n    width:'60%',\r\n    marginTop:'2rem',\r\n \r\n  },\r\n  button:{\r\n    width:'60%',\r\n    marginTop:'20px',\r\n    backgroundColor:'#55BA57',\r\n    background:'#55BA57',\r\n    color:'#ffffff',\r\n    textTransform:'none',\r\n    '&:hover':{\r\n    marginTop:'20px',\r\n    backgroundColor:'#55BA57',\r\n    background:'#55BA57',\r\n    color:'#ffffff',\r\n    textTransform:'none',\r\n    }\r\n  },\r\n    link:{\r\n      textDecoration:'none',\r\n      marginTop:'20px'\r\n    }\r\n}))\r\n\r\nconst ForgotPwdPage = () => {\r\n  const [username,setUsername] = useState('');\r\n\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setUsername(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = {username:username};\r\n\r\n    axios.post('http://localhost:5000/user/forgotPassword',user)\r\n    .then(res=>{\r\n      console.log(res.data);\r\n    })\r\n    .catch(error =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant='h3' className={classes.title}>\r\n          Forgotten username\r\n      </Typography> \r\n      <Typography variant='subtitle1' className={classes.subtitle}>\r\n          Enter your username and a password reset email will be sent to the email that is associate with the account.\r\n      </Typography>\r\n      <Grid container>\r\n      <FormControl fullWidth className={classes.formContainer}>\r\n      <Typography variant='h6' >\r\n         Username\r\n      </Typography>\r\n      \r\n      <TextField\r\n       id=\"outlined-username-input\"\r\n       label=\"Enter your Username here\"\r\n       type=\"username\"\r\n       autoComplete=\"current-username\"\r\n       variant=\"outlined\" \r\n       name= \"username\"\r\n       onChange={handleChange}\r\n        />\r\n      <Button className={classes.button} onClick = {handleSubmit}>\r\n        Submit\r\n      </Button>\r\n\r\n      </FormControl>\r\n      </Grid>\r\n\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPwdPage;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\ResetAccountPage\\ForgotUsernamePage.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\SignUpPage\\AuthPage.js",["251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React,{useEffect,useState} from 'react';\r\nimport {Button,makeStyles,Grid,Box,Paper, Typography,\r\n    FormControl,InputLabel,Input,FormControlLabel,\r\n    TextField,IconButton,Divider,}\r\n     from '@material-ui/core';\r\n  import Alert from '@material-ui/lab/Alert';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {resend,confirm} from '../../redux/actions/authAction';\r\nimport {clearErrors} from '../../redux/actions/errorAction';\r\nimport {useHistory} from 'react-router-dom';\r\n     \r\n\r\n     const useStyles = makeStyles((theme)=>({\r\n      signUpContainer:{\r\n  \r\n        margin:'0 auto',\r\n        width: '80%',\r\n        paddingTop:'1rem',\r\n    \r\n      },\r\n    \r\n      joinButton:{\r\n          backgroundColor:'#1A1818',\r\n          background:'#1A1818',\r\n          color:'#ffff',\r\n          width:'100%',\r\n          marginTop:'1rem',\r\n          textTransform:'none',\r\n          '&:hover':{\r\n            backgroundColor:'#1A1818',\r\n            background:'#1A1818',\r\n            color:'#ffff',\r\n            textTransform:'none',\r\n          }\r\n          \r\n      },\r\n      codeTextField:{\r\n        width:'70%'\r\n      },\r\n      resendBtn:{\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n        textTransform:'none',\r\n        height:'3.5rem',\r\n        width:'30%',\r\n        '&:hover':{\r\n          backgroundColor:'#000000',\r\n          color:'#ffffff',\r\n        } \r\n      },\r\n      disableResendBtn:{\r\n        backgroundColor:'#cccccc',\r\n        color: '#666666',\r\n        textTransform:'none',\r\n        height:'3.5rem',\r\n        width:'30%',\r\n        '&:hover':{\r\n          backgroundColor:'#cccccc',\r\n          color: '#666666',\r\n        } \r\n      },\r\n      divider:{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        '&::before':{\r\n          content: '\"\"',\r\n          flex: '1 1',\r\n          borderBottom: '1px solid #000',\r\n          margin: 'auto',\r\n          marginRight: '10px',\r\n        },\r\n        '&::after':{\r\n          content: '\"\"',\r\n          flex: '1 1',\r\n          borderBottom: '1px solid #000',\r\n          margin: 'auto',\r\n          marginLeft: '10px',\r\n        },\r\n      },\r\n        link:{\r\n          textDecoration:'none',\r\n        }\r\n    \r\n    }))\r\n\r\nconst AuthPage = (props) => {\r\n    const classes = useStyles();\r\n    const [counter, setCounter] =useState(5);\r\n    const [email,setEmail] = useState('');\r\n    const [errMsg,setErrMsg] = useState(null);\r\n    const [secretCode,setSecretCode] = useState(null);\r\n    const [isResendClick,setIsResendClick] = useState(false);\r\n    const [isComplete,setIsComplete] = useState(false);\r\n    const [disableBtn,setDisableBtn] = useState(false);\r\n    const [secToMinute,setSecToMinute] = useState('');\r\n\r\n    useEffect(() => {\r\n      props.clearErrors();\r\n      if(counter == 0){\r\n        return handleComplete();\r\n      }\r\n\r\n      const timer =\r\n        counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n      return () => clearInterval(timer);\r\n     \r\n    }, [counter]);\r\n\r\n\r\n\r\n  \r\n  const handleResend = (e) =>{\r\n    e.preventDefault();\r\n    setIsResendClick(true);\r\n    setDisableBtn(true);\r\n    setCounter(5);\r\n    // const resendCode = Math.floor(100000 + Math.random() * 900000);\r\n    // props.resend(resendCode);\r\n  }\r\n\r\n  const handleSent = (e) =>{\r\n    e.preventDefault();\r\n    const email = props.email;\r\n    const inputCode = {secretCode,email}\r\n    props.confirm(inputCode);\r\n\r\n  }\r\n\r\n  const handleComplete = (e) =>{\r\n    setIsResendClick(false);\r\n    setDisableBtn(false);\r\n    \r\n  }\r\n\r\n\r\n  \r\n  const handleChange = (e) => {\r\n    if(e.target.name=='secretCode') setSecretCode(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    const {isAuthenticated,isConfirmed,error} = props;\r\n    const history = useHistory();\r\n    return ( \r\n        <div>\r\n             <Grid container \r\n              className={classes.signUpContainer}\r\n              direction='column'\r\n              >\r\n              \r\n                 <Grid item >\r\n                    <Typography variant='h4'>\r\n                       <Box letterSpacing={2}>\r\n                         Sign up for account \r\n                       </Box>\r\n                    </Typography>\r\n                 </Grid>\r\n                 <Grid item>\r\n                     <Typography variant='inherit'>\r\n                         <Box letterSpacing={2} mt={1}>\r\n                            nnn-ramen, All about delicious\r\n                         </Box>\r\n                      </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Box mt={5}>\r\n                  <p>We have sent a confirmation code to your email address. please enter the code below</p>\r\n                   </Box>\r\n                  </Grid>\r\n                  <FormControl \r\n                 variant=\"outlined\"  \r\n                  margin='dense' \r\n                  fullWidth\r\n                  >\r\n                \r\n                <Box >\r\n                  <TextField\r\n                        id=\"outlined-secretCode-input\"\r\n                        label=\"Confirmation code\"\r\n                        type=\"secretCode\"\r\n                        name=\"secretCode\"\r\n                        autoComplete=\"current-secretCode\"\r\n                        variant=\"outlined\"\r\n                        // fullWidth\r\n                        className={classes.codeTextField}\r\n                        onChange={handleChange}\r\n                     \r\n                    />\r\n                    <Button \r\n                    className={isResendClick?classes.disableResendBtn\r\n                      :classes.resendBtn} \r\n                      disabled = {disableBtn}\r\n                      onClick={handleResend}\r\n                      >\r\n                      <Typography variant='subtitle1' >\r\n                          { isResendClick?\r\n                          <span>{counter}</span>\r\n                       :<Typography> Resend Code  </Typography>\r\n                       \r\n                       }\r\n                     \r\n                      </Typography>\r\n                  </Button>\r\n                </Box>\r\n\r\n                <Typography variant='caption'>The comfirmation code will be expired in 5 minutes</Typography>\r\n           \r\n                <Button className={classes.joinButton}\r\n                 onClick={handleSent}\r\n                 >\r\n                  <Typography variant='h6'>\r\n                    Enter\r\n                  </Typography>\r\n                </Button>\r\n                </FormControl>\r\n              \r\n                  {/* when user is comfirmed. displays a message and redirect the user to main\r\n                  page in 3 sec */}\r\n\r\n                     \r\n\r\n                  {/* {\r\n               \r\n               // no idea why settimeout returns a wired number 2/7/2021\r\n                    isConfirmed?\r\n                    <Alert severity=\"success\">\r\n                      The comfirmation code is correct, you will be redirect to main page in 3 second\r\n                      {\r\n                       setTimeout(()=>history.push(\"/\", { from: \"signUp\" }), 3000 )\r\n                       }\r\n                      </Alert>    \r\n                   :null\r\n                  } */}\r\n\r\n                {\r\n               \r\n        \r\n                    isConfirmed?\r\n                       history.push(\"/\", { from: \"signUp\" }):null\r\n                  }\r\n\r\n                  {\r\n                    error.msg.msg?\r\n                    <Alert severity=\"warning\">\r\n                    {error.msg.msg}\r\n                   </Alert>\r\n                   :null\r\n                  }\r\n             \r\n\r\n\r\n                </Grid>\r\n        </div>\r\n     );\r\n}\r\n\r\nAuthPage.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  isConfirmed:PropTypes.bool,\r\n  error: PropTypes.object.isRequired,\r\n  register:PropTypes.func.isRequired,\r\n  clearErrors:PropTypes.func.isRequired,\r\n  }\r\n  \r\n  const mapStateToProps = state  =>({\r\n    isAuthenticated : state.auth.isAuthenticated,\r\n    isConfirmed : state.auth.isConfirmed,\r\n    error: state.error\r\n  });\r\n\r\n\r\n \r\nexport default connect(mapStateToProps,{clearErrors,resend,confirm})(AuthPage); //,login","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\reducer\\rootReducer.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Navbar\\Navbar.js",["269","270","271","272","273"],"import { Paper } from '@material-ui/core';\r\nimport React,{useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport LogoutPage from '../LogoutPage/LogoutPage';\r\n\r\n\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n \r\n  const {isAuthenticated,user } =  props.auth;\r\n  const [click, setClick] = useState(false);\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const onMouseEnter = () => {\r\n    if (window.innerWidth < 960) {\r\n      setDropdown(false);\r\n    } else {\r\n      setDropdown(true);\r\n    }\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (window.innerWidth < 960) {\r\n      setDropdown(false);\r\n    } else {\r\n      setDropdown(false);\r\n    }\r\n  };\r\n\r\n  const authLinks = (\r\n    <>\r\n\r\n      <li className='nav-item'>\r\n      <Link\r\n          to='/signIn'\r\n          className='nav-links'\r\n          onClick={closeMobileMenu}\r\n          >\r\n               <LogoutPage/>\r\n         </Link>\r\n      </li>\r\n    </>\r\n  )\r\n  \r\n  const guestLinks = (\r\n    <>\r\n      <li className='nav-item'>\r\n          <Link\r\n           to='/signIn'\r\n           className='nav-links'\r\n           onClick={closeMobileMenu}\r\n          >\r\n             Login\r\n           </Link>\r\n       </li>\r\n    </>\r\n  )\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n      \r\n        <nav className='nav-wrapper'>\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n          nnn-ramen\r\n           {/* <i class=\"fas fa-utensils\"/> */}\r\n          </Link>\r\n          <Link to= '/cart' className='fa-cart-plus-mobile'>\r\n          {/* fa-cart-plus-mobile */}\r\n           <i class=\"fas fa-cart-plus \" />\r\n          </Link>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className='fas fa-bars'/>\r\n          </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              <li className='nav-item'>\r\n                <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/Menu'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  Menu\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/contact-us'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  About \r\n                </Link>\r\n              </li>\r\n              {/* <li className='nav-item'>\r\n                <Link\r\n                  to='/signIn'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                 Login\r\n                </Link>\r\n              </li> */}\r\n                {isAuthenticated ? authLinks : guestLinks}\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/order'\r\n                  className='order-now-btn'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  Order Now\r\n                </Link>\r\n              </li>        \r\n              <li className='nav-item' >\r\n                  <Link\r\n                    to='/cart'\r\n                    className='nav-links'\r\n                    onClick={closeMobileMenu}\r\n                  >\r\n                   <i class=\"fas fa-cart-plus  \"/>\r\n                  </Link>\r\n             </li>\r\n          </ul>\r\n      \r\n        </nav>\r\n      </>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state  =>({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps,null)(Navbar);","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\HomeBody.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\RamenMenu\\RamenMenu.js",["274"],"import React,{useState,} from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport 豚骨拉面 from '../../../images/豚骨拉面.png';\r\nimport 味增拉面 from '../../../images/味增拉面.png';\r\nimport 酱油叉烧拉面 from '../../../images/酱油叉烧拉面.png';\r\nimport 盐味拉面 from  '../../../images/盐味拉面.png';\r\nimport 兰州拉面 from  '../../../images/兰州拉面.png';\r\nimport 沾面 from  '../../../images/沾面.png';\r\nimport Ramens from './Ramens';\r\nimport Paginations from '../Pagination/Paginations';\r\nimport PopoutFooter from '../PopoutFooter/PopoutFooter';\r\n\r\n//https://www.wikiwikinomnom.com/product/wiki-wiki-shio-ramen/13  reference\r\n\r\nconst ramenDetails = [\r\n  {\r\n    image:豚骨拉面,\r\n    chnTitle:'豚骨拉面',\r\n    engTitle:'Tonkotsu Ramen',\r\n    japTitle:'とんこつ ラーメン',\r\n    price:'$10',\r\n    numberOfRating:3,\r\n    rating:2,\r\n    ramenAddOns:[\r\n  \r\n      {\r\n        type:'Egg',\r\n        cost:1,\r\n      },\r\n      {\r\n        type:'Extra Egg',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Chashu',\r\n        cost:3,\r\n      },\r\n      \r\n      {\r\n        type:'Extra Corn',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Bamboo',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Spinach ',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Noodle ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Extra Mushroom ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Spicy Flakes ',\r\n        cost:0.25,\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    image:味增拉面, \r\n    chnTitle:'味增拉面',\r\n    engTitle:'Miso Ramen',\r\n    japTitle:'みそラーメン',\r\n    price:'$8',\r\n    numberOfRating:5,\r\n    rating:5,\r\n    ramenAddOns:[\r\n  \r\n      {\r\n        type:'Egg',\r\n        cost:1,\r\n      },\r\n      {\r\n        type:'Extra Egg',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Chashu',\r\n        cost:3,\r\n      },\r\n      \r\n      {\r\n        type:'Extra Corn',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Bamboo',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Spinach ',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Noodle ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Extra Mushroom ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Spicy Flakes ',\r\n        cost:0.25,\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    image:酱油叉烧拉面, \r\n    chnTitle:'酱油叉烧拉面',\r\n    engTitle:'Shoyu Ramen',\r\n    japTitle:'しょうゆラーメン',\r\n    price:'$8',\r\n    numberOfRating:3,\r\n    rating:1,\r\n    ramenAddOns:[\r\n  \r\n      {\r\n        type:'Egg',\r\n        cost:1,\r\n      },\r\n      {\r\n        type:'Extra Egg',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Chashu',\r\n        cost:3,\r\n      },\r\n      \r\n      {\r\n        type:'Extra Corn',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Bamboo',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Spinach ',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Noodle ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Extra Mushroom ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Spicy Flakes ',\r\n        cost:0.25,\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    image:盐味拉面, \r\n    chnTitle:'盐味拉面',\r\n    engTitle:'Shio Ramen',\r\n    japTitle:'しおラーメン',\r\n    price:'$8',\r\n    numberOfRating:3,\r\n    rating:3.5,\r\n    ramenAddOns:[\r\n  \r\n      {\r\n        type:'Egg',\r\n        cost:1,\r\n      },\r\n      {\r\n        type:'Extra Egg',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Chashu',\r\n        cost:3,\r\n      },\r\n      \r\n      {\r\n        type:'Extra Corn',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Bamboo',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Spinach ',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Noodle ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Extra Mushroom ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Spicy Flakes ',\r\n        cost:0.25,\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    image:兰州拉面, \r\n    chnTitle:'兰州拉面',\r\n    engTitle:'Lanzhou Beef Noodle',\r\n    japTitle:'ぎゅうにくめん',\r\n    price:'$9',\r\n    numberOfRating:1000,\r\n    rating:5,\r\n    ramenAddOns:[\r\n  \r\n      {\r\n        type:'Egg',\r\n        cost:1,\r\n      },\r\n      {\r\n        type:'Extra Egg',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Chashu',\r\n        cost:3,\r\n      },\r\n      \r\n      {\r\n        type:'Extra Corn',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Bamboo',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Spinach ',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Noodle ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Extra Mushroom ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Spicy Flakes ',\r\n        cost:0.25,\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    image:沾面, \r\n    chnTitle:'沾面',\r\n    engTitle:'Tsukemen Ramen',\r\n    japTitle:'つけめん',\r\n    price:'$6',\r\n    numberOfRating:3,\r\n    rating:1,\r\n    ramenAddOns:[\r\n  \r\n      {\r\n        type:'Egg',\r\n        cost:1,\r\n      },\r\n      {\r\n        type:'Extra Egg',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Chashu',\r\n        cost:3,\r\n      },\r\n      \r\n      {\r\n        type:'Extra Corn',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Bamboo',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Spinach ',\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type:'Extra Noodle ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Extra Mushroom ',\r\n        cost:3,\r\n      },\r\n\r\n      {\r\n        type:'Spicy Flakes ',\r\n        cost:0.25,\r\n      },\r\n    ]\r\n  },\r\n \r\n    \r\n]\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  pagination:{\r\n    \r\n  }\r\n}))\r\n\r\nconst RamenMenu = () => {\r\n  const classes = useStyles();\r\n  const itemPerPage = 4;\r\n  const totalItems = ramenDetails.length;\r\n  const [currentPage,setCurrentPage] = useState(1);\r\n\r\n\r\n     //Get current posts\r\n     const indexOfLastItem = currentPage * itemPerPage;\r\n     const indexOfFirstItem = indexOfLastItem- itemPerPage;\r\n     const currentItem = ramenDetails.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n     const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n \r\n    return( \r\n        <div>\r\n           {currentItem.map((ramens,index)=>{\r\n             return <Ramens key={index} image={ramens.image} \r\n            chnTitle={ramens.chnTitle} engTitle={ramens.engTitle} japTitle={ramens.japTitle}\r\n            price={ramens.price} numberOfRating={ramens.numberOfRating} rating={ramens.rating}\r\n            ramenAddOns={ramens.ramenAddOns} />\r\n           })}\r\n\r\n            <Paginations\r\n              totalItems={totalItems}\r\n              itemPerPage={itemPerPage}\r\n              paginate={paginate}\r\n              currentPage={currentPage}\r\n            />\r\n          \r\n          <PopoutFooter/>\r\n          \r\n        </div>\r\n\r\n       \r\n       \r\n    );\r\n}\r\n \r\nexport default RamenMenu;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Footer\\FooterSection.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\SnackMenu\\SnackMenu.js",["275","276"],"import React,{useState,} from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport 日式锅贴 from '../../../images/日式锅贴.png';\r\nimport 寿司 from '../../../images/寿司.png';\r\nimport 豚平燒 from '../../../images/豚平燒.jpg';\r\nimport 玉子烧 from  '../../../images/玉子烧.jpg';\r\nimport 芝麻鸡翅 from  '../../../images/芝麻鸡翅.jpg';\r\nimport 米饭 from  '../../../images/米饭.jpg';\r\nimport 沾面 from  '../../../images/沾面.png';\r\nimport Snacks from './Snacks';\r\nimport Paginations from '../Pagination/Paginations';\r\nimport PopoutFooter from '../PopoutFooter/PopoutFooter';\r\n//https://www.wikiwikinomnom.com/product/wiki-wiki-shio-ramen/13  reference\r\n\r\nconst snackDetails = [\r\n  {\r\n    image:日式锅贴,\r\n    chnTitle:'日式锅贴',\r\n    engTitle:'Dumpling',\r\n    japTitle:'ぎょうざ',\r\n    price:'$5',\r\n    numberOfRating:100,\r\n    rating:5,\r\n  },\r\n  {\r\n    image:寿司, \r\n    chnTitle:'寿司',\r\n    engTitle:'Sushi',\r\n    japTitle:'すし',\r\n    price:'$8',\r\n    numberOfRating:5,\r\n    rating:5\r\n  },\r\n\r\n  {\r\n    image:米饭, \r\n    chnTitle:'米饭',\r\n    engTitle:'Rice',\r\n    japTitle:'ごはん',\r\n    price:'$1',\r\n    numberOfRating:3,\r\n    rating:1\r\n  },\r\n\r\n  {\r\n    image:芝麻鸡翅, \r\n    chnTitle:'芝麻鸡翅',\r\n    engTitle:'Fried Chicken',\r\n    japTitle:'手羽先レシピ',\r\n    price:'$4',\r\n    numberOfRating:3,\r\n    rating:3.5\r\n  },\r\n\r\n  {\r\n    image:玉子烧, \r\n    chnTitle:'玉子烧',\r\n    engTitle:'Tamagoyaki',\r\n    japTitle:'だし巻き玉子',\r\n    price:'$3',\r\n    numberOfRating:1000,\r\n    rating:5\r\n  },\r\n\r\n  {\r\n    image:豚平燒, \r\n    chnTitle:'豚平燒',\r\n    engTitle:'Tonpei Yaki',\r\n    japTitle:'とんぺい焼き',\r\n    price:'$3',\r\n    numberOfRating:3,\r\n    rating:1\r\n  },\r\n \r\n    \r\n]\r\n\r\n\r\n\r\nconst SnackMenu = () => {\r\n\r\n  const itemPerPage = 4;\r\n  const totalItems = snackDetails.length;\r\n  const [currentPage,setCurrentPage] = useState(1);\r\n\r\n\r\n     //Get current posts\r\n     const indexOfLastItem = currentPage * itemPerPage;\r\n     const indexOfFirstItem = indexOfLastItem- itemPerPage;\r\n     const currentItem = snackDetails.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n     const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n \r\n    return( \r\n        <div>\r\n           {currentItem.map((snacks,index)=>{\r\n             return <Snacks key={index} image={snacks.image} \r\n            chnTitle={snacks.chnTitle} engTitle={snacks.engTitle} japTitle={snacks.japTitle}\r\n            price={snacks.price} numberOfRating={snacks.numberOfRating} rating={snacks.rating} />\r\n           })}\r\n\r\n            <Paginations\r\n              totalItems={totalItems}\r\n              itemPerPage={itemPerPage}\r\n              paginate={paginate}\r\n              currentPage={currentPage}\r\n            />\r\n        <PopoutFooter/>\r\n        </div>\r\n       \r\n    );\r\n}\r\n \r\nexport default SnackMenu;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\DrinkMenu\\DrinkMenu.js",["277","278","279","280","281","282"],"import React,{useState,} from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport 啤酒 from '../../../images/啤酒.jpg';\r\nimport 碳酸饮料 from '../../../images/碳酸饮料.jpg';\r\nimport 豚平燒 from '../../../images/豚平燒.jpg';\r\nimport 玉子烧 from  '../../../images/玉子烧.jpg';\r\nimport 芝麻鸡翅 from  '../../../images/芝麻鸡翅.jpg';\r\nimport 米饭 from  '../../../images/米饭.jpg';\r\nimport 沾面 from  '../../../images/沾面.png';\r\nimport Drinks from './Drinks';\r\nimport Paginations from '../Pagination/Paginations';\r\nimport PopoutFooter from '../PopoutFooter/PopoutFooter';\r\n//https://www.wikiwikinomnom.com/product/wiki-wiki-shio-ramen/13  reference\r\n\r\nconst DrinksDetails =   [\r\n  {\r\n    image:啤酒,\r\n    chnTitle:'啤酒',\r\n    engTitle:'Beer',\r\n    japTitle:'ビール',\r\n    initPrice:0,\r\n    numberOfRating:100,\r\n    rating:5,\r\n    typeOfdrink: [\r\n      {\r\n       type:\"Asahi\",\r\n       cost:2,\r\n      },\r\n\r\n      {\r\n      type: \"Yebisu\",\r\n      cost:2,\r\n      },\r\n\r\n      {\r\n        type: \"Kirin\",\r\n        cost:2,\r\n      },\r\n\r\n      {\r\n        type: \"Sapporo\",\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type: \"Heiniken\",\r\n        cost:1.5,\r\n      },\r\n\r\n      {\r\n        type: \"Budweiser\",\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type: \"Tsingtao\",\r\n        cost:1.5,\r\n      }\r\n  ]\r\n    \r\n  },\r\n  {\r\n    image:碳酸饮料, \r\n    chnTitle:'碳酸饮料',\r\n    engTitle:'Soda',\r\n    japTitle:'たんさんいんりょう',\r\n    initPrice:0,\r\n    numberOfRating:5,\r\n    rating:5,\r\n    typeOfdrink: [\r\n      {\r\n       type:\"Coke\",\r\n       cost:1,\r\n      },\r\n\r\n      {\r\n      type: \"Diet Coke \",\r\n      cost:1,\r\n      },\r\n\r\n      {\r\n        type: \"Pepsi\",\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type: \"Sprite\",\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type: \"Fanta \",\r\n        cost:1,\r\n      },\r\n\r\n      {\r\n        type: \"Dr Pepper\",\r\n        cost:1,\r\n      },\r\n      {\r\n        type: \"Monster\",\r\n        cost:2,\r\n      },\r\n      {\r\n        type: \"RedBull 8.4 oz\",\r\n        cost:2,\r\n      },\r\n      {\r\n        type: \"RedBull 12 oz\",\r\n        cost:3,\r\n      },\r\n\r\n\r\n\r\n     \r\n  ]\r\n    \r\n  },\r\n\r\n  // {\r\n  //   image:米饭, \r\n  //   chnTitle:'米饭',\r\n  //   engTitle:'Rice',\r\n  //   japTitle:'ごはん',\r\n  //   price:'$1',\r\n  //   numberOfRating:3,\r\n  //   rating:1\r\n  // },\r\n\r\n  // {\r\n  //   image:芝麻鸡翅, \r\n  //   chnTitle:'芝麻鸡翅',\r\n  //   engTitle:'Fried Chicken',\r\n  //   japTitle:'手羽先レシピ',\r\n  //   price:'$4',\r\n  //   numberOfRating:3,\r\n  //   rating:3.5\r\n  // },\r\n\r\n  // {\r\n  //   image:玉子烧, \r\n  //   chnTitle:'玉子烧',\r\n  //   engTitle:'Tamagoyaki',\r\n  //   japTitle:'だし巻き玉子',\r\n  //   price:'$3',\r\n  //   numberOfRating:1000,\r\n  //   rating:5\r\n  // },\r\n\r\n  // {\r\n  //   image:豚平燒, \r\n  //   chnTitle:'豚平燒',\r\n  //   engTitle:'Tonpei Yaki',\r\n  //   japTitle:'とんぺい焼き',\r\n  //   price:'$3',\r\n  //   numberOfRating:3,\r\n  //   rating:1\r\n  // },\r\n \r\n    \r\n]\r\n\r\n\r\n\r\nconst DrinkMenu = () => {\r\n\r\n  const itemPerPage = 4;\r\n  const totalItems = DrinksDetails.length;\r\n  const [currentPage,setCurrentPage] = useState(1);\r\n\r\n\r\n     //Get current posts\r\n     const indexOfLastItem = currentPage * itemPerPage;\r\n     const indexOfFirstItem = indexOfLastItem- itemPerPage;\r\n     const currentItem = DrinksDetails.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n     const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\r\n    return( \r\n        <div>\r\n          \r\n           {currentItem.map((drinks,index)=>{\r\n            //    {console.log(drinks.typeOfdrink)}\r\n             return <Drinks key={index} image={drinks.image} \r\n            chnTitle={drinks.chnTitle} engTitle={drinks.engTitle} japTitle={drinks.japTitle}\r\n            initPrice={drinks.initPrice} typeOfdrink ={drinks.typeOfdrink}   />\r\n           \r\n           })}\r\n         \r\n\r\n            <Paginations\r\n              totalItems={totalItems}\r\n              itemPerPage={itemPerPage}\r\n              paginate={paginate}\r\n              currentPage={currentPage}\r\n            />\r\n          <PopoutFooter/>\r\n        </div>\r\n       \r\n    );\r\n}\r\n \r\nexport default DrinkMenu;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\actions\\authAction.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\actions\\errorAction.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\reducer\\authReducer.js",["283","284","285"],"import {\r\n    USER_LOADING,\r\n    USER_LOADED, \r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    CONFIRMATION_FAIL,\r\n    CONFIRMATION_SUCCESS,\r\n    RESEND_SUCCESS,\r\n    RESEND_FAIL,\r\n    } from '../actions/types';\r\n    \r\n    const initState = {\r\n      token: localStorage.getItem('token'),\r\n      isAuthenticated: null,\r\n      isLoading: false,\r\n      user: null,\r\n      isConfirmed:false,\r\n      isResend:false,\r\n      isInCooldown:false,\r\n    };\r\n    \r\n    export default function ( state = initState, action){\r\n      switch(action.type){\r\n        case USER_LOADING:\r\n          return {\r\n            ...state,\r\n            isLoading:true\r\n          };\r\n          case USER_LOADED:\r\n          return{\r\n            ...state,\r\n            isAuthenticated:true,\r\n            isLoading:false,\r\n            user: action.payload\r\n          };\r\n          case LOGIN_SUCCESS:\r\n          case REGISTER_SUCCESS:\r\n           localStorage.setItem('token',action.payload.token);\r\n          return{\r\n            ...state,\r\n            ...action.payload,\r\n            isAuthenticated:true,\r\n            isLoading:true\r\n          }\r\n          case AUTH_ERROR:\r\n          case LOGIN_FAIL:\r\n          case LOGOUT_SUCCESS:\r\n          case REGISTER_FAIL:\r\n          localStorage.removeItem('token');\r\n          return{\r\n            ...state,\r\n            token:null,\r\n            user: null,\r\n            isAuthenticated:false,\r\n            isLoading:false\r\n          }\r\n          case RESEND_SUCCESS:\r\n            return{\r\n              ...state,\r\n              isResend:true,\r\n              isInCooldown:true,\r\n            }\r\n          case CONFIRMATION_SUCCESS:\r\n            localStorage.setItem('token',action.payload.token);\r\n             return{\r\n               ...state,\r\n               isConfirmed:true,\r\n             }\r\n          // case CONFIRMATION_FAIL:{\r\n\r\n          // }\r\n        \r\n\r\n          default:\r\n            return state;    \r\n    }\r\n      }\r\n     ","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\reducer\\errorReducer.js",["286"],"import {GET_ERRORS , CLEAR_ERRORS  } from '../actions/types';\r\n\r\nconst initState = {\r\n  msg: {},\r\n  status : null,\r\n  id: null,\r\n}\r\n\r\nexport default function(state = initState, action){\r\n  switch(action.type){\r\n    case GET_ERRORS:\r\n    return{\r\n      msg:action.payload.msg,\r\n      status:action.payload.status,\r\n      id: action.payload.id,\r\n    }\r\n    case CLEAR_ERRORS:\r\n    return{\r\n      msg:{},\r\n      status: null,\r\n      id: null,\r\n    }\r\n    default:\r\n    return state;\r\n  }\r\n}","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\RamenMenu\\Ramens.js",["287","288","289","290","291"],"import React,{useState} from 'react';\r\nimport {FormControlLabel,\r\n  FormGroup,makeStyles,Grid, \r\n  Divider, Checkbox, Typography,\r\n  Box,IconButton,withStyles \r\n} from '@material-ui/core';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: '#000000',\r\n    '&$checked': {\r\n      color: '#000000'\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n  root:{\r\n    // width:'100%',\r\n  },\r\n  ramenImages:{\r\n    width:'100%',\r\n    height:'35rem'\r\n  },\r\n  title:{\r\n      textAlign:'center',\r\n  },\r\n  iconbutton:{\r\n      display:'flex',\r\n      flexDirection: \"row\",\r\n      borderRadius:0,\r\n      \"&:hover\": {\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n    }\r\n  },\r\n  iconbuttonWrapper:{\r\n    display:'flex',\r\n    flexDirection: \"column\"\r\n  },\r\n\r\n  bar:{\r\n    backgroundColor:'#f8f8f8',\r\n    height:'30px',\r\n    width:'100%',\r\n  },\r\n\r\n  formGroup:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n  }\r\n}));\r\n\r\nconst Ramens = (props) => {\r\n  const [state, setState] = useState({\r\n    checked0: false,\r\n    checked1: false,\r\n    checked2: false,\r\n    checked3: false,\r\n    checked4: false,\r\n    checked5: false,\r\n    checked6: false,\r\n    checked7: false,\r\n    checked8: false,\r\n\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n\r\n\r\n    const classes = useStyle();\r\n    return( \r\n         <Grid\r\n          container\r\n          className={classes.root}\r\n          justify='center'\r\n          alignItems='center'\r\n         align='center'\r\n          >\r\n             <Grid item lg={8}>\r\n                <img src={props.image} className={classes.ramenImages}/>\r\n             </Grid>\r\n             <Grid item lg={4}>\r\n                <Typography className={classes.title} variant='h3'>\r\n                    <Box letterSpacing={3}>\r\n                         {props.engTitle}\r\n                    </Box>\r\n                </Typography>\r\n                <Typography className={classes.title} variant='h5'>\r\n                    <Box >\r\n                         {props.chnTitle}\r\n                         <Divider orientation=\"vertical\" />\r\n                         {props.japTitle}\r\n                    </Box>\r\n                </Typography>\r\n\r\n                <Typography>\r\n                      <Box fontWeight='bold' mt={2}>\r\n                      Ramen Add On's\r\n                      </Box>\r\n                    </Typography>\r\n                    <Typography variant='caption'>\r\n                      <Box>\r\n                      Select all that apply\r\n                      </Box>\r\n                    </Typography>\r\n\r\n                <Grid container \r\n                 justify='center'\r\n                 alignItems='center'\r\n                 align='center'\r\n                >\r\n                    {/* <Grid item >\r\n                        <Typography variant='caption'>\r\n                            <Box letterSpacing={3}mt={3}>\r\n                                {props.numberOfRating + ' RATINGS  '}\r\n                            </Box> \r\n                        </Typography>\r\n                        </Grid>\r\n                    <Grid item >\r\n                        <Box mt={3}>\r\n                             <Rating name=\"size-large\" defaultValue={props.rating} size=\"large\" />\r\n                         </Box>\r\n                    </Grid> */}\r\n\r\n                \r\n\r\n                    <FormGroup row className={classes.formGroup}> \r\n                           { props.ramenAddOns.map((addOn,index)=>{ \r\n                                      \r\n                           return  <FormControlLabel\r\n                                 control={\r\n                                 <GreenCheckbox\r\n                                //  checked={state.checkedA}\r\n                                 onChange={handleChange} \r\n                                 key={index}\r\n                                 className={classes.checkboxs}\r\n                                 name={\"checked\"+index} />}\r\n                                 label={addOn.type +\" \"+\"$\"+addOn.cost} \r\n                                                \r\n                       /> \r\n                    \r\n                        })}       \r\n               </FormGroup>  \r\n                \r\n                </Grid>\r\n                <Typography className={classes.title} variant='h4'>\r\n                    <Box letterSpacing={5} mt={2}>\r\n                        {props.price}\r\n                    </Box>\r\n                </Typography>\r\n                <Box mt={4} className={classes.iconbuttonWrapper}>\r\n                  <IconButton className={classes.iconbutton}>\r\n                      <AddShoppingCartIcon/>\r\n                     <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Add to Cart\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton>\r\n                  <IconButton className={classes.iconbutton}>\r\n                      <FavoriteBorderIcon/>\r\n                      <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Add Favorite\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton>\r\n                \r\n                </Box>\r\n             </Grid>\r\n             <div className={classes.bar}/>\r\n            \r\n         </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Ramens;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\redux\\actions\\types.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\DrinkMenu\\Drinks.js",["292","293","294","295","296","297"],"import React,{useState,useEffect} from 'react';\r\nimport {makeStyles,withStyles,Grid,Checkbox,FormGroup , Divider, Typography,Box,IconButton,FormControlLabel } from '@material-ui/core';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: '#000000',\r\n      '&$checked': {\r\n        color: '#000000'\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n  root:{\r\n    // width:'100%',\r\n  },\r\n  DrinksImages:{\r\n    width:'100%',\r\n    height:'35rem'\r\n  },\r\n  title:{\r\n      textAlign:'center',\r\n  },\r\n  iconbutton:{\r\n      display:'flex',\r\n      flexDirection: \"row\",\r\n      borderRadius:0,\r\n      \"&:hover\": {\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n    }\r\n  },\r\n  iconbuttonWrapper:{\r\n    display:'flex',\r\n    flexDirection: \"column\"\r\n  },\r\n\r\n  bar:{\r\n    backgroundColor:'#f8f8f8',\r\n    height:'30px',\r\n    width:'100%',\r\n  },\r\n\r\n  formGroup:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    marginTop:'30px',\r\n  }\r\n \r\n}));\r\n\r\nconst Ramens = (props) => {\r\n    const classes = useStyle();\r\n    const [state, setState] = useState({\r\n        checked0: false,\r\n        checked1: false,\r\n        checked2: false,\r\n        checked3: false,\r\n        checked4: false,\r\n        checked5: false,\r\n        checked6: false,\r\n        checked7: false,\r\n        checked8: false,\r\n  \r\n      });\r\n    \r\n \r\n      // {console.log(typeofName)}\r\n      const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n      };\r\n\r\n  \r\n\r\n    //    const {type1,type2} = props.typeOfdrink;\r\n      //  console.log(props.typeOfdrink);\r\n  \r\n    return( \r\n     \r\n         <Grid\r\n          container\r\n          className={classes.root}\r\n          justify='center'\r\n          alignItems='center'\r\n          align='center'\r\n          >\r\n              \r\n             <Grid item lg={8}>\r\n                <img src={props.image} className={classes.DrinksImages}/>\r\n             </Grid>\r\n             <Grid item lg={4}>\r\n                <Typography className={classes.title} variant='h3'>\r\n                    <Box letterSpacing={3}>\r\n                         {props.engTitle}\r\n                    </Box>\r\n                </Typography>\r\n                <Typography className={classes.title} variant='h5'>\r\n                    <Box >\r\n                         {props.chnTitle}\r\n                         <Divider orientation=\"vertical\" />\r\n                         {props.japTitle}\r\n                    </Box>\r\n                </Typography>\r\n                {/* <Grid container \r\n                 justify='center'\r\n                 alignItems='center'\r\n                 align='center'\r\n                >\r\n                 \r\n                \r\n                </Grid>\r\n                 */}\r\n         \r\n             \r\n        \r\n                     <FormGroup row className={classes.formGroup}> \r\n                           { props.typeOfdrink.map((drink,index)=>{ \r\n                                      \r\n                           return  <FormControlLabel\r\n                                 control={\r\n                                 <GreenCheckbox\r\n                                //  checked={state.checkedA}\r\n                                 onChange={handleChange} \r\n                                 key={index}\r\n                                 className={classes.checkboxs}\r\n                                 name={\"checked\"+index} />}\r\n                                 label={drink.type +\" \"+\"$\"+drink.cost} \r\n                                                \r\n                       /> \r\n                    \r\n                        })}       \r\n               </FormGroup>  \r\n           \r\n        \r\n             \r\n\r\n                <Typography className={classes.title} variant='h4'>\r\n                    <Box letterSpacing={5} mt={6}>\r\n                        {/* {\"$\"+props.initPrice} */}\r\n                    </Box>\r\n                </Typography>\r\n                <Box mt={4} className={classes.iconbuttonWrapper}>\r\n                  <IconButton className={classes.iconbutton}>\r\n                      <AddShoppingCartIcon/>\r\n                     <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Add to Cart\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton>\r\n                  <IconButton className={classes.iconbutton}>\r\n                      <FavoriteBorderIcon/>\r\n                      <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Add Favorite\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton>\r\n                </Box>\r\n             </Grid>\r\n             <div className={classes.bar}/>\r\n            \r\n         </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Ramens;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\SnackMenu\\Snacks.js",["298","299","300","301","302","303","304"],"import React from 'react';\r\nimport {Card,CardHeader,makeStyles,Grid, Divider, CardMedia, Typography,Box,IconButton } from '@material-ui/core';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n  root:{\r\n    // width:'100%',\r\n  },\r\n  ramenImages:{\r\n    width:'100%',\r\n    height:'35rem'\r\n  },\r\n  title:{\r\n      textAlign:'center',\r\n  },\r\n  iconbutton:{\r\n      display:'flex',\r\n      flexDirection: \"row\",\r\n      borderRadius:0,\r\n      \"&:hover\": {\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n    }\r\n  },\r\n  iconbuttonWrapper:{\r\n    display:'flex',\r\n    flexDirection: \"column\"\r\n  },\r\n\r\n  bar:{\r\n    backgroundColor:'#f8f8f8',\r\n    height:'30px',\r\n    width:'100%',\r\n  }\r\n}));\r\n\r\nconst Ramens = (props) => {\r\n    const classes = useStyle();\r\n    return( \r\n         <Grid\r\n          container\r\n          className={classes.root}\r\n          justify='center'\r\n          alignItems='center'\r\n         align='center'\r\n          >\r\n             <Grid item lg={8}>\r\n                <img src={props.image} className={classes.ramenImages}/>\r\n             </Grid>\r\n             <Grid item lg={4}>\r\n                <Typography className={classes.title} variant='h3'>\r\n                    <Box letterSpacing={3}>\r\n                         {props.engTitle}\r\n                    </Box>\r\n                </Typography>\r\n                <Typography className={classes.title} variant='h5'>\r\n                    <Box >\r\n                         {props.chnTitle}\r\n                         <Divider orientation=\"vertical\" />\r\n                         {props.japTitle}\r\n                    </Box>\r\n                </Typography>\r\n                <Grid container \r\n                 justify='center'\r\n                 alignItems='center'\r\n                 align='center'\r\n                >\r\n                    {/* <Grid item >\r\n                        <Typography variant='caption'>\r\n                            <Box letterSpacing={3}mt={3}>\r\n                                {props.numberOfRating + ' RATINGS  '}\r\n                            </Box> \r\n                        </Typography></Grid>\r\n                    <Grid item >\r\n                        <Box mt={3}>\r\n                             <Rating name=\"size-large\" defaultValue={props.rating} size=\"large\" />\r\n                         </Box>\r\n                    </Grid> */}\r\n                \r\n                </Grid>\r\n                <Typography className={classes.title} variant='h4'>\r\n                    <Box letterSpacing={5} mt={6}>\r\n                        {props.price}\r\n                    </Box>\r\n                </Typography>\r\n                <Box mt={4} className={classes.iconbuttonWrapper}>\r\n                  <IconButton className={classes.iconbutton}>\r\n                      <AddShoppingCartIcon/>\r\n                     <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Add to Cart\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton>\r\n                  <IconButton className={classes.iconbutton}>\r\n                      <FavoriteBorderIcon/>\r\n                      <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Add Favorite\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton>\r\n                  {/* <IconButton className={classes.iconbutton}>\r\n                      <CommentIcon/>\r\n                      <Typography variant='h6'>\r\n                        <Box ml={1}>\r\n                          Comment\r\n                        </Box>\r\n                     </Typography>\r\n                  </IconButton> */}\r\n                </Box>\r\n             </Grid>\r\n             <div className={classes.bar}/>\r\n            \r\n         </Grid>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Ramens;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\LogoutPage\\LogoutPage.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\About\\AboutSection.js",["305"],"\r\nimport React from 'react';\r\nimport {Grid,Box,Typography,\r\n  Button,withStyles,makeStyles,\r\n  useMediaQuery,useTheme} from '@material-ui/core'\r\nimport '../About/AboutSection.css';\r\nimport Section2Png from '../../../../images/section-2.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n \r\n\r\n  section2Img:{\r\n      width: '500px',\r\n      height: '600px',\r\n      zIndex: 100,\r\n      marginTop:'6.9rem',\r\n      position: 'relative',\r\n      [theme.breakpoints.down('sm')]: {\r\n          \r\n          width: '400px',\r\n          height: '550px',\r\n          marginTop:'12rem',\r\n\r\n      },\r\n\r\n      [theme.breakpoints.down(770)]: {\r\n          width: '330px',\r\n          height: '550px',\r\n  },\r\n\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '100%',\r\n        height: '400px',\r\n        margin:'0',\r\n    \r\n  \r\n    },\r\n\r\n\r\n     \r\n    \r\n  },\r\n\r\n  about:{\r\n      color: '#8B4513',\r\n      opacity:0.5,\r\n      zIndex: 90, \r\n      position: 'absolute',\r\n      letterSpacing: 7,\r\n      fontWeight:30,\r\n      fontFamily:\"Monospace\",\r\n      fontSize:130,\r\n      marginLeft:'7.5rem',\r\n      \r\n      [theme.breakpoints.down('sm')]: {\r\n        display:'none',\r\n      },\r\n   \r\n  },\r\n  \r\n  section2Title:{\r\n\r\n      [theme.breakpoints.down('sm')]: {\r\n          fontSize:'2rem',\r\n          \r\n  },\r\n\r\n  [theme.breakpoints.down('xs')]:{\r\n         marginTop:'10px',\r\n  }\r\n\r\n},\r\n\r\n\r\n  aboutMobile:{\r\n      display:'none',\r\n      \r\n      [theme.breakpoints.down('sm')]: {\r\n          display:'inline',\r\n          color: '#8B4513',\r\n          opacity:0.5,\r\n          zIndex: 90, \r\n          position: 'absolute',\r\n          letterSpacing: 7,\r\n          fontWeight:30,\r\n          fontFamily:\"Monospace\",\r\n          fontSize:100,\r\n          marginTop:'6.9rem',\r\n\r\n        },\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n          marginTop:0,\r\n          borderColor:'#808080',\r\n          borderStyle: 'outset',\r\n          padding:'8px'\r\n       \r\n        },\r\n      \r\n  },\r\n\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n\r\n  borderColor:'#800000',\r\n  color:'#800000',\r\n  opacity:0.5,\r\n  padding: '10px,30px',\r\n    '&:hover': {\r\n      background: \"#800000\",\r\n      color:\"white\",\r\n      opacity:0.7\r\n   },\r\n  },\r\n  label: {\r\n    textTransform: 'capitalize',\r\n  },\r\n})(Button);\r\n\r\n\r\nconst StyledTypography = withStyles({\r\n  root: {\r\n    color: '#8B4513',\r\n    opacity:0.5,\r\n  },\r\n \r\n})(Typography);\r\n\r\nconst About = (props) =>{\r\n  \r\n  return(\r\n      <>\r\n       <Typography variant=\"h1\" \r\n   className={props.class.aboutMobile} \r\n              >   \r\n               <Box >\r\n                  About\r\n               </Box>   \r\n                     \r\n       </Typography>\r\n      </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction AboutSection() {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const smMatches = useMediaQuery(theme.breakpoints.only('sm'));\r\n  const xsMatches = useMediaQuery(theme.breakpoints.only('xs'));\r\nreturn (\r\n  <>\r\n   \r\n      <Grid container justify=\"center\"\r\n      alignItems=\"flex-start\" className=\"section-2-container\">\r\n\r\n      {xsMatches?<About class={classes}/> :null}\r\n\r\n        <Grid item xs={10}  sm={4} md={4} lg={4} >\r\n          <Box  mt={20} >\r\n              <Typography variant=\"h5\"  >\r\n                  About the Resturant\r\n              </Typography>\r\n              <StyledTypography variant=\"h3\"  className={classes.section2Title}>\r\n                 BEST RAMEN EXPERIENCE EVER!\r\n              </StyledTypography>\r\n              <hr className=\"section-2-left-hr\"/>\r\n              <Box lineHeight={2}> \r\n               <Typography variant=\"p\">\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sed sem non sapien placerat iaculis et vel arcu. Suspendisse vel purus urna. Cras pellentesque congue blandit. Fusce ut orci nec arcu consequat condimentum. \r\n               </Typography>\r\n               </Box>\r\n              <Box mt={5}>\r\n                <StyledButton size=\"large\" variant=\"outlined\">\r\n                    READ MORE\r\n                </StyledButton>\r\n              </Box>\r\n           </Box>\r\n        </Grid>\r\n       <Grid item   sm={1} md={1} lg ={1}>\r\n    \r\n          {smMatches?<About class={classes}/>:null}\r\n       </Grid>\r\n        <Grid item xs={10} sm={5} md={5} lg={3}>\r\n           <Box  >\r\n            <Typography variant=\"h1\" \r\n             className={classes.about} \r\n              >   \r\n               <Box >\r\n                  About\r\n               </Box>         \r\n            </Typography>\r\n           </Box>\r\n\r\n             <Box  >   \r\n              <img src={Section2Png} \r\n              className={classes.section2Img}/>\r\n              \r\n           </Box>\r\n         \r\n        </Grid>\r\n        <Grid item sm={1} md={1} lg={1}>\r\n             \r\n        </Grid>\r\n\r\n      </Grid>\r\n  \r\n\r\n  \r\n\r\n</>\r\n);\r\n}\r\n\r\nexport default AboutSection;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Ramen\\RamenSection.js",["306"],"import React from 'react';\r\nimport RamenTitlePng from '../../../../images/RAMEN-title.png';\r\nimport '../Ramen/RamenSection.css';\r\n\r\nfunction RamenSection(props) {\r\n  return (\r\n    <div className=\"section-1 \">\r\n    <img src={RamenTitlePng}/>\r\n\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default RamenSection;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Gallery\\GallerySection.js",["307","308","309","310","311","312","313","314","315","316","317","318","319"],"import React,{useEffect,useState} from 'react';\r\nimport './GallerySection.css';\r\nimport {Typography,Box,withStyles,makeStyles,useMediaQuery,useTheme } from '@material-ui/core';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n//https://www.bonappetit.com/recipe/vegetarian-ramen nice design  \r\n\r\n\r\nconst StyledTypography = withStyles({\r\n  root: {\r\n    color: '#8B4513',\r\n    opacity:0.5,\r\n  },\r\n \r\n})(Typography);\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n\r\n\r\n\r\n// }));\r\n\r\n\r\nconst GallerySection = () =>{\r\n    const [SlidePercentage,setSlidePercentage] = useState(70);\r\n    const theme = useTheme();\r\n    const xsMatche = useMediaQuery(theme.breakpoints.down('xs'));\r\n    const smMatche = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const mdMatche = useMediaQuery(theme.breakpoints.down('md'));\r\n    const lgMatche = useMediaQuery(theme.breakpoints.down('lg'));\r\n\r\n    // if(lgMatche) setSlidePercentage(70);\r\n    // else if(mdMatche) setSlidePercentage(50);\r\n    // else if(smMatche) setSlidePercentage(30);\r\n    // else if(xsMatche) setSlidePercentage(10);\r\n\r\n  return(\r\n    <>\r\n      <h1 className='gallery-title' > \r\n           Gallery\r\n       </h1>\r\n      <div className='container'>\r\n        <div className='carousel-wrapper'>\r\n         <Carousel \r\n         infiniteLoop\r\n         useKeyboardArrows\r\n         autoPlay \r\n         showStatus={false}\r\n         centerMode\r\n        //  centerSlidePercentage={50}\r\n        centerSlidePercentage={50}\r\n         showThumbs={false}\r\n          >\r\n                  <div style={{backgroundColor:'white'}}>\r\n                      <img className='image'src=\"https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/article_thumbnails/other/cat_relaxing_on_patio_other/1800x1200_cat_relaxing_on_patio_other.jpg\" />\r\n                  </div >\r\n                  <div style={{backgroundColor:'white'}}>\r\n                      <img  className='image'src=\"https://www.sciencemag.org/sites/default/files/styles/article_main_image_-_1280w__no_aspect_/public/dogs_1280p_0.jpg?itok=6jQzdNB8\" />\r\n                  </div>\r\n                  <div style={{backgroundColor:'white'}}>\r\n                      <img   className='image'src=\"https://cdn.vox-cdn.com/thumbor/E95GFrahUCtg_WUYpSpf1cgYGsw=/0x0:960x639/1200x900/filters:focal(295x276:447x428)/cdn.vox-cdn.com/uploads/chorus_image/image/61055427/48386721_1922685597829418_3502338425917276160_n.1535484911.jpg\" />\r\n                  </div>\r\n              </Carousel>\r\n  \r\n                \r\n          </div>\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default GallerySection;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Menu\\MenuSection.js",["320","321","322","323","324","325","326","327","328","329","330","331","332"],"import React from 'react';\r\nimport Section3bgPng from '../../../../images/section-3-bg.jpg';\r\nimport 味增拉面 from '../../../../images/味增拉面.png';\r\nimport 豚骨拉面 from '../../../../images/豚骨拉面.png';\r\nimport 喜多方拉面 from '../../../../images/喜多方拉面.png';\r\nimport 盐味拉面 from '../../../../images/盐味拉面.png';\r\nimport 酱油叉烧拉面 from '../../../../images/酱油叉烧拉面.png';\r\nimport  鱼贝类拉面 from '../../../../images/鱼贝类拉面.png';\r\nimport 寿司 from '../../../../images/寿司.png';\r\nimport 日式锅贴 from '../../../../images/日式锅贴.png';\r\nimport 酱油拌面 from '../../../../images/酱油拌面.png';\r\nimport 兰州拉面 from '../../../../images/兰州拉面.png';\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport MenuCard from './MenuCard';\r\n\r\n\r\n\r\nfunction MenuSection() {\r\n\r\n\r\n  return (\r\n    <div className='section-3' >\r\n    <div className='section-3-title' > \r\n          <Typography variant='h2'>\r\n             MENU メニュー\r\n          </Typography>\r\n      </div>\r\n    {/* <Grid\r\n    container\r\n     direction=\"row\"\r\n    // justify=\"flex-start\"\r\n\r\n   \r\n     >   \r\n      <Grid item xs={12} sm={6} md={4} lg={4}>\r\n         <MenuCard\r\n          headerTitle=\"味增拉面\"\r\n          subheaderTitle=\"the best\"\r\n          image={味增拉面}\r\n          mediaTitle=\"wtf\"\r\n          price=\"$10\"\r\n          content=\" 味噌拉麵（日语：味噌ラーメン）使用味噌作為拉麵湯加上日本麵條，雖然以札幌的味噌拉麵名氣最高，但其他地方也擁有出名的味噌拉麵。 \"\r\n          />\r\n      </Grid>\r\n      <Grid item xs={12}  sm={6} md={ 4} lg={4}>\r\n         <MenuCard\r\n          headerTitle=\"味增拉面\"\r\n          subheaderTitle=\"the best\"\r\n          image={味增拉面}\r\n          mediaTitle=\"wtf\"\r\n          price=\"$10\"\r\n          content=\" 味噌拉麵（日语：味噌ラーメン）使用味噌作為拉麵湯加上日本麵條，雖然以札幌的味噌拉麵名氣最高，但其他地方也擁有出名的味噌拉麵。 \"\r\n          />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={4}>\r\n         <MenuCard\r\n          headerTitle=\"味增拉面\"\r\n          subheaderTitle=\"the best\"\r\n          image={味增拉面}\r\n          mediaTitle=\"wtf\"\r\n          price=\"$10\"\r\n          content=\" 味噌拉麵（日语：味噌ラーメン）使用味噌作為拉麵湯加上日本麵條，雖然以札幌的味噌拉麵名氣最高，但其他地方也擁有出名的味噌拉麵。 \"\r\n          />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={4}>\r\n         <MenuCard\r\n          headerTitle=\"味增拉面\"\r\n          subheaderTitle=\"the best\"\r\n          image={味增拉面}\r\n          mediaTitle=\"wtf\"\r\n          price=\"$10\"\r\n          content=\" 味噌拉麵（日语：味噌ラーメン）使用味噌作為拉麵湯加上日本麵條，雖然以札幌的味噌拉麵名氣最高，但其他地方也擁有出名的味噌拉麵。 \"\r\n          />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4}lg={4}>\r\n         <MenuCard\r\n          headerTitle=\"味增拉面\"\r\n          subheaderTitle=\"the best\"\r\n          image={味增拉面}\r\n          mediaTitle=\"wtf\"\r\n          price=\"$10\"\r\n          content=\" 味噌拉麵（日语：味噌ラーメン）使用味噌作為拉麵湯加上日本麵條，雖然以札幌的味噌拉麵名氣最高，但其他地方也擁有出名的味噌拉麵。 \"\r\n          />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={4}>\r\n         <MenuCard\r\n          headerTitle=\"味增拉面\"\r\n          subheaderTitle=\"the best\"\r\n          image={味增拉面}\r\n          mediaTitle=\"wtf\"\r\n          price=\"$10\"\r\n          content=\" 味噌拉麵（日语：味噌ラーメン）使用味噌作為拉麵湯加上日本麵條，雖然以札幌的味噌拉麵名氣最高，但其他地方也擁有出名的味噌拉麵。 \"\r\n          />\r\n      </Grid>\r\n\r\n     \r\n\r\n      \r\n    </Grid> */}\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default MenuSection;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Address\\AddressSection.js",["333"],"import React from 'react';\r\nimport './AddressSection.css'\r\nimport {Grid} from '@material-ui/core';\r\n\r\n// https://stackoverflow.com/questions/37097404/equal-height-columns-with-centered-content-in-flexbox\r\nconst AddressSection = () => {\r\n  return (\r\n\r\n    <div className='address-container' >\r\n\r\n       <div className=\"address-section-div-wrapper\">\r\n         <i class=\"fas fa-map-marker-alt address-section-img\"/>\r\n         <h3 className='address-section-text'>Address</h3>\r\n         <div>4801 8th Ave, </div>\r\n         <div>Brooklyn, NY 11220</div>\r\n       </div>\r\n    \r\n       <div className=\"address-section-div-wrapper\">\r\n          <i class=\"fas fa-phone-square-alt address-section-img\"/>\r\n          <h3 className='address-section-text'>Phone</h3>\r\n          <div>+1 (718) 437-3542</div>\r\n          <div>+1 (646) 233-6623</div>\r\n        </div>\r\n   \r\n        <div className=\"address-section-div-wrapper\">\r\n          <i class=\"fas fa-clock address-section-img\"/>\r\n          <h3 className='address-section-text'> Hours</h3>\r\n          <div>Monday-Sunday</div>\r\n          <div>07:30–21:00</div>\r\n        </div>\r\n  \r\n   \r\n       <div className=\"address-section-div-wrapper\">\r\n          <i class=\"fas fa-utensils address-section-img\"/>\r\n          <h3 className='address-section-text'>Status</h3>\r\n          <div>Online Order  ✔ </div>\r\n          <div>Food delivery  ✔ </div>\r\n          <div>Take-out   ✔ </div>\r\n          <div>Dine-in  ✖</div>\r\n        </div>\r\n    \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default AddressSection;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Map\\MapSection.js",[],"C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\Pagination\\Paginations.js",["334"],"import React from 'react';\r\nimport { Pagination,PaginationItem} from '@material-ui/lab';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles(({\r\n  root:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    marginBottom:'1rem',\r\n    marginTop: '1rem',\r\n  \r\n  },\r\n\r\n}))\r\n\r\nconst Paginations = ({totalItems,itemPerPage,paginate,currentPage}) => {\r\nconst classes = useStyle();\r\n\r\nlet totalPage = Math.ceil(totalItems / itemPerPage);\r\nlet active =currentPage;\r\nlet items = [];\r\nfor (let number = 1; number <= Math.ceil(totalItems / itemPerPage); number++) {\r\n  items.push(number);\r\n}\r\n\r\nconst handleChange = (event, value) => {\r\n  paginate(value);\r\n};\r\n    return ( \r\n        <div>     \r\n             <Pagination \r\n             defaultPage={1}\r\n             color=\"secondary\" \r\n             count={totalPage} \r\n             onChange={handleChange}\r\n             className={classes.root}\r\n             size=\"large\"\r\n                  >\r\n         {items.map(item=>(\r\n            <PaginationItem \r\n             key={item} \r\n             page={currentPage}\r\n            \r\n             >\r\n            </PaginationItem>\r\n         ))}     \r\n           </Pagination>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Paginations;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\Menu\\PopoutFooter\\PopoutFooter.js",["335"],"import React from 'react';\r\nimport {makeStyles,Typography,Box,Grid,IconButton,Button} from '@material-ui/core';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport {Link} from 'react-router-dom';\r\nconst useStyles = makeStyles(()=>({\r\n    root:{\r\n        display:'flex',\r\n        justifyContent:'flex-end',\r\n        alignItems:'center',\r\n        height:'70px',  \r\n        // width:'100%',\r\n        // margin: '0 auto',\r\n        bottom: 0,\r\n        position:'sticky',\r\n        backgroundColor:'#ffda08',\r\n     \r\n\r\n    },\r\n\r\n \r\n    flexContents:{\r\n        // display:'flex',\r\n        margin: '0 10px',\r\n        // justifyContent:'space-evenly',\r\n        // alignItems:'center',\r\n\r\n    },\r\n    checkoutButton:{\r\n        background:'#000000',\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n        padding:'10px',\r\n        borderRadius:7,\r\n        '&:hover':{\r\n            background:'#000000',\r\n            backgroundColor:'#000000',\r\n           \r\n        }\r\n    },\r\n    cart:{\r\n        background:'#000000',\r\n        backgroundColor:'#000000',\r\n        color:'#ffffff',\r\n        borderRadius:7,\r\n        '&:hover':{\r\n            background:'#000000',\r\n            backgroundColor:'#000000',\r\n            borderRadius:7,\r\n           \r\n        }\r\n    },\r\n\r\n    cartIcon:{\r\n        marginRight:'8px'\r\n    },\r\n    link:{\r\n       textDecoration:'none'\r\n    }\r\n}))\r\n\r\nconst PopoutFooter = () => {\r\n    const classes = useStyles();\r\n    return ( \r\n    <div className={classes.root}>\r\n         <div className={classes.flexContents}>\r\n                 <Typography className={classes.text} variant='h4'>\r\n                     <Box letterSpacing={2} fontWeight='bold' >\r\n                      Total:  $ 0\r\n                      </Box>\r\n                  </Typography>\r\n         </div>\r\n         <div className={classes.flexContents}>\r\n             <Link to='cart' className={classes.link}>\r\n                <IconButton className={classes.cart}>\r\n                    <ShoppingCartIcon className={classes.cartIcon}/>\r\n                    <Typography className={classes.text} variant='h6'>\r\n                     <Box letterSpacing={2} >\r\n                        CART\r\n                      </Box>\r\n                  </Typography>\r\n                </IconButton>\r\n             </Link>\r\n         </div>\r\n         <div className={classes.flexContents}>\r\n             <Link to='checkout' className={classes.link}>\r\n               <Button className={classes.checkoutButton}>\r\n                <Typography className={classes.text} variant='h6'>\r\n                     <Box letterSpacing={2}>\r\n                     Check out\r\n                     </Box>\r\n                </Typography>\r\n                </Button>\r\n              </Link>\r\n         </div>\r\n\r\n        {/* <Typography className={classes.text} variant='h3'>\r\n            <Box letterSpacing={5}>\r\n                Total: $\r\n            </Box>\r\n        </Typography>\r\n        <Typography className={classes.text} variant='h2'>\r\n            <Box>\r\n                Check out\r\n            </Box>\r\n        </Typography> */}\r\n        {/* <Grid container \r\n        justify='center'\r\n        alignItems='center'\r\n        >\r\n         \r\n            <Grid item lg>\r\n            <Typography className={classes.text} variant='h3'>\r\n                   <Box letterSpacing={5}>\r\n                   Cart\r\n                   </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item lg>\r\n            <Typography className={classes.text} variant='h3'>\r\n                   <Box letterSpacing={5}>\r\n                   Check out\r\n                   </Box>\r\n              </Typography>\r\n            </Grid>\r\n        </Grid> */}\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default PopoutFooter;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Menu\\MenuCard.js",["336","337","338","339","340","341"],"import React from 'react';\r\nimport './MenuSection.css';\r\nimport { makeStyles,Grid,Divider} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  [theme.breakpoints.down('lg')]: {\r\n    root: {\r\n      maxWidth: 350,\r\n      marginLeft:'4rem',\r\n      marginTop:'8rem',\r\n      height:'auto',\r\n      position:'absolute',\r\n      zIndex:82,\r\n      width:'100%',\r\n      textAlign:'center',\r\n      display:'flex',\r\n      flexDirection:'column',\r\n     \r\n    },\r\n  },\r\n\r\n  [theme.breakpoints.down('md')]: {\r\n    root: {\r\n      maxWidth: 350,\r\n      marginLeft:'0rem',\r\n      marginTop:'8rem',\r\n      height:'auto',\r\n      position:'absolute',\r\n      zIndex:82,\r\n      width:'100%',\r\n      textAlign:'center',\r\n      display:'flex',\r\n      flexDirection:'column',\r\n     \r\n    },\r\n  },\r\n\r\n  [theme.breakpoints.down('sm')]: {\r\n    root: {\r\n      // maxWidth: 400,\r\n      marginLeft:'0rem',\r\n      marginTop:'8rem',\r\n      height:'auto',\r\n      position:'absolute',\r\n      zIndex:82,\r\n      width:'50%',\r\n      textAlign:'center',\r\n      display:'flex',\r\n      flexDirection:'column',\r\n  \r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      root: {\r\n        maxWidth: '100%',\r\n        marginTop:'8rem',\r\n        height:'auto',\r\n        position:'absolute',\r\n        zIndex:82,\r\n        width:'100%',\r\n        textAlign:'center',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n       \r\n      },\r\n    },\r\n  },\r\n   \r\n    \r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n  \r\n    content:{\r\n  \r\n    },\r\n\r\n  \r\n    cardIcons:{\r\n      display:'flex',\r\n      alignItems: 'flex-end',\r\n      justifyContent: 'center',\r\n      // justifyContent: 'space-around',\r\n \r\n    }\r\n \r\n  }));\r\n  \r\n\r\n\r\n\r\n\r\nconst MenuCard = (props) => {\r\n    const classes = useStyles();\r\n    return ( \r\n  <Grid container flexDirection='row'>\r\n    <Card className={classes.root} >\r\n  <Grid item  >\r\n       <CardHeader\r\n         title={props.headerTitle}\r\n         subheader={props.subheaderTitle}\r\n       />\r\n       <CardMedia\r\n         className={classes.media}\r\n         image={props.image}\r\n         title={props.mediaTitle}\r\n       />\r\n   </Grid>\r\n\r\n    <Grid item >\r\n    <CardContent>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n        {props.content}\r\n      </Typography>\r\n    </CardContent>\r\n    <CardContent>\r\n    <Typography variant=\"h4\"  component=\"p\">\r\n        {props.price}\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider variant='middle'/>\r\n    <CardActions disableSpacing className={classes.cardIcons}>\r\n      <IconButton aria-label=\"add to favorites\" >\r\n        <FavoriteIcon />\r\n      </IconButton>\r\n      <IconButton aria-label=\"share\">\r\n        <ShareIcon />\r\n      </IconButton>\r\n      <IconButton aria-label=\"add to cart\" >\r\n        <AddShoppingCartIcon />\r\n      </IconButton>\r\n    </CardActions>\r\n    </Grid>\r\n  </Card>\r\n</Grid>\r\n   );\r\n}\r\n \r\nexport default MenuCard;","C:\\Users\\Zhixi\\Desktop\\github project\\ramen-restaurant-app\\client\\src\\components\\HomePage\\HomeBody\\Config\\env.js",[],{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","severity":1,"message":"347","line":1,"column":39,"nodeType":"348","messageId":"349","endLine":1,"endColumn":46},{"ruleId":"346","severity":1,"message":"350","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":19},{"ruleId":"346","severity":1,"message":"351","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":18},{"ruleId":"346","severity":1,"message":"352","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":22},{"ruleId":"346","severity":1,"message":"353","line":2,"column":29,"nodeType":"348","messageId":"349","endLine":2,"endColumn":36},{"ruleId":"346","severity":1,"message":"354","line":2,"column":16,"nodeType":"348","messageId":"349","endLine":2,"endColumn":20},{"ruleId":"346","severity":1,"message":"355","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":53,"column":30,"nodeType":"358","messageId":"359","endLine":53,"endColumn":32},{"ruleId":"356","severity":1,"message":"357","line":57,"column":35,"nodeType":"358","messageId":"359","endLine":57,"endColumn":37},{"ruleId":"346","severity":1,"message":"360","line":3,"column":48,"nodeType":"348","messageId":"349","endLine":3,"endColumn":53},{"ruleId":"346","severity":1,"message":"361","line":5,"column":15,"nodeType":"348","messageId":"349","endLine":5,"endColumn":25},{"ruleId":"346","severity":1,"message":"362","line":5,"column":26,"nodeType":"348","messageId":"349","endLine":5,"endColumn":31},{"ruleId":"346","severity":1,"message":"363","line":5,"column":32,"nodeType":"348","messageId":"349","endLine":5,"endColumn":48},{"ruleId":"346","severity":1,"message":"353","line":6,"column":24,"nodeType":"348","messageId":"349","endLine":6,"endColumn":31},{"ruleId":"346","severity":1,"message":"364","line":16,"column":8,"nodeType":"348","messageId":"349","endLine":16,"endColumn":14},{"ruleId":"346","severity":1,"message":"365","line":17,"column":8,"nodeType":"348","messageId":"349","endLine":17,"endColumn":15},{"ruleId":"346","severity":1,"message":"366","line":119,"column":10,"nodeType":"348","messageId":"349","endLine":119,"endColumn":20},{"ruleId":"346","severity":1,"message":"367","line":120,"column":10,"nodeType":"348","messageId":"349","endLine":120,"endColumn":23},{"ruleId":"346","severity":1,"message":"368","line":120,"column":24,"nodeType":"348","messageId":"349","endLine":120,"endColumn":40},{"ruleId":"346","severity":1,"message":"369","line":121,"column":10,"nodeType":"348","messageId":"349","endLine":121,"endColumn":20},{"ruleId":"346","severity":1,"message":"370","line":121,"column":21,"nodeType":"348","messageId":"349","endLine":121,"endColumn":34},{"ruleId":"346","severity":1,"message":"371","line":122,"column":10,"nodeType":"348","messageId":"349","endLine":122,"endColumn":20},{"ruleId":"346","severity":1,"message":"372","line":122,"column":21,"nodeType":"348","messageId":"349","endLine":122,"endColumn":34},{"ruleId":"346","severity":1,"message":"373","line":123,"column":10,"nodeType":"348","messageId":"349","endLine":123,"endColumn":17},{"ruleId":"346","severity":1,"message":"374","line":123,"column":19,"nodeType":"348","messageId":"349","endLine":123,"endColumn":29},{"ruleId":"346","severity":1,"message":"375","line":124,"column":10,"nodeType":"348","messageId":"349","endLine":124,"endColumn":21},{"ruleId":"346","severity":1,"message":"376","line":124,"column":22,"nodeType":"348","messageId":"349","endLine":124,"endColumn":36},{"ruleId":"346","severity":1,"message":"377","line":142,"column":20,"nodeType":"348","messageId":"349","endLine":142,"endColumn":35},{"ruleId":"346","severity":1,"message":"378","line":142,"column":36,"nodeType":"348","messageId":"349","endLine":142,"endColumn":48},{"ruleId":"356","severity":1,"message":"357","line":170,"column":21,"nodeType":"358","messageId":"359","endLine":170,"endColumn":23},{"ruleId":"356","severity":1,"message":"357","line":171,"column":26,"nodeType":"358","messageId":"359","endLine":171,"endColumn":28},{"ruleId":"356","severity":1,"message":"357","line":172,"column":26,"nodeType":"358","messageId":"359","endLine":172,"endColumn":28},{"ruleId":"356","severity":1,"message":"357","line":173,"column":26,"nodeType":"358","messageId":"359","endLine":173,"endColumn":28},{"ruleId":"356","severity":1,"message":"357","line":174,"column":26,"nodeType":"358","messageId":"359","endLine":174,"endColumn":28},{"ruleId":"346","severity":1,"message":"379","line":197,"column":9,"nodeType":"348","messageId":"349","endLine":197,"endColumn":16},{"ruleId":"346","severity":1,"message":"380","line":198,"column":26,"nodeType":"348","messageId":"349","endLine":198,"endColumn":37},{"ruleId":"346","severity":1,"message":"381","line":198,"column":38,"nodeType":"348","messageId":"349","endLine":198,"endColumn":43},{"ruleId":"346","severity":1,"message":"354","line":5,"column":9,"nodeType":"348","messageId":"349","endLine":5,"endColumn":13},{"ruleId":"346","severity":1,"message":"382","line":5,"column":80,"nodeType":"348","messageId":"349","endLine":5,"endColumn":91},{"ruleId":"346","severity":1,"message":"383","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":15},{"ruleId":"346","severity":1,"message":"384","line":6,"column":17,"nodeType":"348","messageId":"349","endLine":6,"endColumn":29},{"ruleId":"356","severity":1,"message":"357","line":125,"column":22,"nodeType":"358","messageId":"359","endLine":125,"endColumn":24},{"ruleId":"356","severity":1,"message":"357","line":126,"column":27,"nodeType":"358","messageId":"359","endLine":126,"endColumn":29},{"ruleId":"346","severity":1,"message":"385","line":3,"column":20,"nodeType":"348","messageId":"349","endLine":3,"endColumn":29},{"ruleId":"346","severity":1,"message":"386","line":4,"column":16,"nodeType":"348","messageId":"349","endLine":4,"endColumn":30},{"ruleId":"346","severity":1,"message":"387","line":2,"column":69,"nodeType":"348","messageId":"349","endLine":2,"endColumn":72},{"ruleId":"346","severity":1,"message":"388","line":3,"column":9,"nodeType":"348","messageId":"349","endLine":3,"endColumn":13},{"ruleId":"346","severity":1,"message":"360","line":2,"column":36,"nodeType":"348","messageId":"349","endLine":2,"endColumn":41},{"ruleId":"346","severity":1,"message":"361","line":3,"column":17,"nodeType":"348","messageId":"349","endLine":3,"endColumn":27},{"ruleId":"346","severity":1,"message":"362","line":3,"column":28,"nodeType":"348","messageId":"349","endLine":3,"endColumn":33},{"ruleId":"346","severity":1,"message":"363","line":3,"column":34,"nodeType":"348","messageId":"349","endLine":3,"endColumn":50},{"ruleId":"346","severity":1,"message":"389","line":4,"column":15,"nodeType":"348","messageId":"349","endLine":4,"endColumn":25},{"ruleId":"346","severity":1,"message":"353","line":4,"column":26,"nodeType":"348","messageId":"349","endLine":4,"endColumn":33},{"ruleId":"346","severity":1,"message":"390","line":90,"column":12,"nodeType":"348","messageId":"349","endLine":90,"endColumn":17},{"ruleId":"346","severity":1,"message":"391","line":90,"column":18,"nodeType":"348","messageId":"349","endLine":90,"endColumn":26},{"ruleId":"346","severity":1,"message":"392","line":91,"column":12,"nodeType":"348","messageId":"349","endLine":91,"endColumn":18},{"ruleId":"346","severity":1,"message":"393","line":91,"column":19,"nodeType":"348","messageId":"349","endLine":91,"endColumn":28},{"ruleId":"346","severity":1,"message":"369","line":94,"column":12,"nodeType":"348","messageId":"349","endLine":94,"endColumn":22},{"ruleId":"346","severity":1,"message":"370","line":94,"column":23,"nodeType":"348","messageId":"349","endLine":94,"endColumn":36},{"ruleId":"346","severity":1,"message":"375","line":96,"column":12,"nodeType":"348","messageId":"349","endLine":96,"endColumn":23},{"ruleId":"346","severity":1,"message":"376","line":96,"column":24,"nodeType":"348","messageId":"349","endLine":96,"endColumn":38},{"ruleId":"356","severity":1,"message":"357","line":100,"column":18,"nodeType":"358","messageId":"359","endLine":100,"endColumn":20},{"ruleId":"394","severity":1,"message":"395","line":108,"column":8,"nodeType":"396","endLine":108,"endColumn":17,"suggestions":"397"},{"ruleId":"356","severity":1,"message":"357","line":139,"column":21,"nodeType":"358","messageId":"359","endLine":139,"endColumn":23},{"ruleId":"346","severity":1,"message":"377","line":144,"column":12,"nodeType":"348","messageId":"349","endLine":144,"endColumn":27},{"ruleId":"346","severity":1,"message":"360","line":1,"column":10,"nodeType":"348","messageId":"349","endLine":1,"endColumn":15},{"ruleId":"346","severity":1,"message":"398","line":16,"column":26,"nodeType":"348","messageId":"349","endLine":16,"endColumn":30},{"ruleId":"346","severity":1,"message":"399","line":18,"column":10,"nodeType":"348","messageId":"349","endLine":18,"endColumn":18},{"ruleId":"346","severity":1,"message":"400","line":23,"column":9,"nodeType":"348","messageId":"349","endLine":23,"endColumn":21},{"ruleId":"346","severity":1,"message":"401","line":31,"column":9,"nodeType":"348","messageId":"349","endLine":31,"endColumn":21},{"ruleId":"346","severity":1,"message":"402","line":362,"column":9,"nodeType":"348","messageId":"349","endLine":362,"endColumn":16},{"ruleId":"346","severity":1,"message":"403","line":2,"column":9,"nodeType":"348","messageId":"349","endLine":2,"endColumn":19},{"ruleId":"346","severity":1,"message":"404","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":10},{"ruleId":"346","severity":1,"message":"403","line":2,"column":9,"nodeType":"348","messageId":"349","endLine":2,"endColumn":19},{"ruleId":"346","severity":1,"message":"405","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":11},{"ruleId":"346","severity":1,"message":"406","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":11},{"ruleId":"346","severity":1,"message":"407","line":7,"column":8,"nodeType":"348","messageId":"349","endLine":7,"endColumn":12},{"ruleId":"346","severity":1,"message":"408","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":10},{"ruleId":"346","severity":1,"message":"404","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":10},{"ruleId":"346","severity":1,"message":"409","line":10,"column":5,"nodeType":"348","messageId":"349","endLine":10,"endColumn":22},{"ruleId":"346","severity":1,"message":"410","line":13,"column":5,"nodeType":"348","messageId":"349","endLine":13,"endColumn":16},{"ruleId":"411","severity":1,"message":"412","line":26,"column":5,"nodeType":"413","endLine":81,"endColumn":8},{"ruleId":"411","severity":1,"message":"412","line":9,"column":1,"nodeType":"413","endLine":26,"endColumn":2},{"ruleId":"346","severity":1,"message":"414","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":14},{"ruleId":"346","severity":1,"message":"415","line":10,"column":8,"nodeType":"348","messageId":"349","endLine":10,"endColumn":20},{"ruleId":"346","severity":1,"message":"416","line":11,"column":8,"nodeType":"348","messageId":"349","endLine":11,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":93,"column":17,"nodeType":"419","endLine":93,"endColumn":73},{"ruleId":"420","severity":1,"message":"421","line":151,"column":56,"nodeType":"358","messageId":"422","endLine":151,"endColumn":57},{"ruleId":"346","severity":1,"message":"423","line":1,"column":24,"nodeType":"348","messageId":"349","endLine":1,"endColumn":33},{"ruleId":"346","severity":1,"message":"414","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":14},{"ruleId":"346","severity":1,"message":"415","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":20},{"ruleId":"346","severity":1,"message":"416","line":7,"column":8,"nodeType":"348","messageId":"349","endLine":7,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":98,"column":17,"nodeType":"419","endLine":98,"endColumn":74},{"ruleId":"420","severity":1,"message":"421","line":136,"column":56,"nodeType":"358","messageId":"422","endLine":136,"endColumn":57},{"ruleId":"346","severity":1,"message":"424","line":2,"column":9,"nodeType":"348","messageId":"349","endLine":2,"endColumn":13},{"ruleId":"346","severity":1,"message":"425","line":2,"column":14,"nodeType":"348","messageId":"349","endLine":2,"endColumn":24},{"ruleId":"346","severity":1,"message":"426","line":2,"column":51,"nodeType":"348","messageId":"349","endLine":2,"endColumn":60},{"ruleId":"346","severity":1,"message":"414","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":14},{"ruleId":"346","severity":1,"message":"415","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":20},{"ruleId":"346","severity":1,"message":"416","line":7,"column":8,"nodeType":"348","messageId":"349","endLine":7,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":52,"column":17,"nodeType":"419","endLine":52,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":202,"column":15,"nodeType":"419","endLine":203,"endColumn":48},{"ruleId":"417","severity":1,"message":"418","line":8,"column":5,"nodeType":"419","endLine":8,"endColumn":31},{"ruleId":"346","severity":1,"message":"423","line":1,"column":15,"nodeType":"348","messageId":"349","endLine":1,"endColumn":24},{"ruleId":"346","severity":1,"message":"387","line":3,"column":20,"nodeType":"348","messageId":"349","endLine":3,"endColumn":23},{"ruleId":"346","severity":1,"message":"403","line":3,"column":35,"nodeType":"348","messageId":"349","endLine":3,"endColumn":45},{"ruleId":"346","severity":1,"message":"427","line":9,"column":7,"nodeType":"348","messageId":"349","endLine":9,"endColumn":23},{"ruleId":"346","severity":1,"message":"428","line":25,"column":12,"nodeType":"348","messageId":"349","endLine":25,"endColumn":27},{"ruleId":"346","severity":1,"message":"429","line":25,"column":28,"nodeType":"348","messageId":"349","endLine":25,"endColumn":46},{"ruleId":"346","severity":1,"message":"430","line":27,"column":11,"nodeType":"348","messageId":"349","endLine":27,"endColumn":19},{"ruleId":"346","severity":1,"message":"431","line":28,"column":11,"nodeType":"348","messageId":"349","endLine":28,"endColumn":19},{"ruleId":"346","severity":1,"message":"432","line":29,"column":11,"nodeType":"348","messageId":"349","endLine":29,"endColumn":19},{"ruleId":"346","severity":1,"message":"433","line":30,"column":11,"nodeType":"348","messageId":"349","endLine":30,"endColumn":19},{"ruleId":"417","severity":1,"message":"418","line":55,"column":23,"nodeType":"419","endLine":55,"endColumn":216},{"ruleId":"417","severity":1,"message":"418","line":58,"column":23,"nodeType":"419","endLine":58,"endColumn":185},{"ruleId":"417","severity":1,"message":"418","line":61,"column":23,"nodeType":"419","endLine":61,"endColumn":283},{"ruleId":"346","severity":1,"message":"434","line":2,"column":8,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"346","severity":1,"message":"435","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":12},{"ruleId":"346","severity":1,"message":"436","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":12},{"ruleId":"346","severity":1,"message":"437","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":13},{"ruleId":"346","severity":1,"message":"438","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":12},{"ruleId":"346","severity":1,"message":"439","line":7,"column":8,"nodeType":"348","messageId":"349","endLine":7,"endColumn":14},{"ruleId":"346","severity":1,"message":"440","line":8,"column":9,"nodeType":"348","messageId":"349","endLine":8,"endColumn":14},{"ruleId":"346","severity":1,"message":"441","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":10},{"ruleId":"346","severity":1,"message":"442","line":10,"column":8,"nodeType":"348","messageId":"349","endLine":10,"endColumn":12},{"ruleId":"346","severity":1,"message":"443","line":11,"column":8,"nodeType":"348","messageId":"349","endLine":11,"endColumn":12},{"ruleId":"346","severity":1,"message":"444","line":12,"column":8,"nodeType":"348","messageId":"349","endLine":12,"endColumn":12},{"ruleId":"346","severity":1,"message":"354","line":13,"column":9,"nodeType":"348","messageId":"349","endLine":13,"endColumn":13},{"ruleId":"346","severity":1,"message":"445","line":14,"column":8,"nodeType":"348","messageId":"349","endLine":14,"endColumn":16},{"ruleId":"346","severity":1,"message":"354","line":3,"column":9,"nodeType":"348","messageId":"349","endLine":3,"endColumn":13},{"ruleId":"346","severity":1,"message":"446","line":21,"column":5,"nodeType":"348","messageId":"349","endLine":21,"endColumn":11},{"ruleId":"346","severity":1,"message":"354","line":2,"column":35,"nodeType":"348","messageId":"349","endLine":2,"endColumn":39},{"ruleId":"346","severity":1,"message":"447","line":4,"column":8,"nodeType":"348","messageId":"349","endLine":4,"endColumn":12},{"ruleId":"346","severity":1,"message":"448","line":10,"column":8,"nodeType":"348","messageId":"349","endLine":10,"endColumn":16},{"ruleId":"346","severity":1,"message":"449","line":11,"column":8,"nodeType":"348","messageId":"349","endLine":11,"endColumn":14},{"ruleId":"346","severity":1,"message":"450","line":14,"column":10,"nodeType":"348","messageId":"349","endLine":14,"endColumn":13},{"ruleId":"346","severity":1,"message":"451","line":17,"column":8,"nodeType":"348","messageId":"349","endLine":17,"endColumn":22},{"ruleId":"346","severity":1,"message":"452","line":18,"column":8,"nodeType":"348","messageId":"349","endLine":18,"endColumn":20},"no-native-reassign",["453"],"no-negated-in-lhs",["454"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'AskDelievry' is defined but never used.","'AskPayment' is defined but never used.","'AskReviewOrder' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'Footer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'FormControlLabel' is defined but never used.","'moment' is defined but never used.","'Counter' is defined but never used.","'secretCode' is assigned a value but never used.","'isResendClick' is assigned a value but never used.","'setIsResendClick' is assigned a value but never used.","'isComplete' is assigned a value but never used.","'setIsComplete' is assigned a value but never used.","'disableBtn' is assigned a value but never used.","'setDisableBtn' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'secToMinute' is assigned a value but never used.","'setSecToMinute' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'isInCooldown' is assigned a value but never used.","'history' is assigned a value but never used.","'isConfirmed' is assigned a value but never used.","'error' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'color' is defined but never used.","'borderRadius' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'Box' is defined but never used.","'Link' is defined but never used.","'IconButton' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'errMsg' is assigned a value but never used.","'setErrMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["455"],"'user' is assigned a value but never used.","'dropdown' is assigned a value but never used.","'onMouseEnter' is assigned a value but never used.","'onMouseLeave' is assigned a value but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","'沾面' is defined but never used.","'豚平燒' is defined but never used.","'玉子烧' is defined but never used.","'芝麻鸡翅' is defined but never used.","'米饭' is defined but never used.","'CONFIRMATION_FAIL' is defined but never used.","'RESEND_FAIL' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Rating' is defined but never used.","'FavoriteIcon' is defined but never used.","'CommentIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useEffect' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'StyledTypography' is assigned a value but never used.","'SlidePercentage' is assigned a value but never used.","'setSlidePercentage' is assigned a value but never used.","'xsMatche' is assigned a value but never used.","'smMatche' is assigned a value but never used.","'mdMatche' is assigned a value but never used.","'lgMatche' is assigned a value but never used.","'Section3bgPng' is defined but never used.","'味增拉面' is defined but never used.","'豚骨拉面' is defined but never used.","'喜多方拉面' is defined but never used.","'盐味拉面' is defined but never used.","'酱油叉烧拉面' is defined but never used.","'鱼贝类拉面' is defined but never used.","'寿司' is defined but never used.","'日式锅贴' is defined but never used.","'酱油拌面' is defined but never used.","'兰州拉面' is defined but never used.","'MenuCard' is defined but never used.","'active' is assigned a value but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"456","fix":"457"},"Update the dependencies array to be: [counter, props]",{"range":"458","text":"459"},[3004,3013],"[counter, props]"]